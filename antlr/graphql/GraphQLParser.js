// Generated from /home/roman/Dokumente/Sources/plot-cv/lib/grammars/GraphQL.g4 by ANTLR 4.8
// jshint ignore: start
var antlr4 = require('antlr4/index');
var GraphQLListener = require('./GraphQLListener').GraphQLListener;
var GraphQLVisitor = require('./GraphQLVisitor').GraphQLVisitor;

var grammarFileName = 'GraphQL.g4';

var serializedATN = [
  '\u0003\u608b\ua72a\u8133\ub9ed\u417c\u3be7\u7786\u5964',
  '\u0003C\u02a9\u0004\u0002\t\u0002\u0004\u0003\t\u0003\u0004\u0004\t',
  '\u0004\u0004\u0005\t\u0005\u0004\u0006\t\u0006\u0004\u0007\t\u0007\u0004',
  '\b\t\b\u0004\t\t\t\u0004\n\t\n\u0004\u000b\t\u000b\u0004\f\t\f\u0004',
  '\r\t\r\u0004\u000e\t\u000e\u0004\u000f\t\u000f\u0004\u0010\t\u0010\u0004',
  '\u0011\t\u0011\u0004\u0012\t\u0012\u0004\u0013\t\u0013\u0004\u0014\t',
  '\u0014\u0004\u0015\t\u0015\u0004\u0016\t\u0016\u0004\u0017\t\u0017\u0004',
  '\u0018\t\u0018\u0004\u0019\t\u0019\u0004\u001a\t\u001a\u0004\u001b\t',
  '\u001b\u0004\u001c\t\u001c\u0004\u001d\t\u001d\u0004\u001e\t\u001e\u0004',
  '\u001f\t\u001f\u0004 \t \u0004!\t!\u0004"\t"\u0004#\t#\u0004$\t$\u0004',
  "%\t%\u0004&\t&\u0004'\t'\u0004(\t(\u0004)\t)\u0004*\t*\u0004+\t+\u0004",
  ',\t,\u0004-\t-\u0004.\t.\u0004/\t/\u00040\t0\u00041\t1\u00042\t2\u0004',
  '3\t3\u00044\t4\u00045\t5\u00046\t6\u00047\t7\u00048\t8\u00049\t9\u0004',
  ':\t:\u0004;\t;\u0004<\t<\u0004=\t=\u0004>\t>\u0004?\t?\u0004@\t@\u0004',
  'A\tA\u0004B\tB\u0004C\tC\u0004D\tD\u0004E\tE\u0004F\tF\u0004G\tG\u0004',
  'H\tH\u0003\u0002\u0006\u0002\u0092\n\u0002\r\u0002\u000e\u0002\u0093',
  '\u0003\u0003\u0003\u0003\u0003\u0003\u0005\u0003\u0099\n\u0003\u0003',
  '\u0004\u0003\u0004\u0005\u0004\u009d\n\u0004\u0003\u0005\u0003\u0005',
  '\u0005\u0005\u00a1\n\u0005\u0003\u0005\u0005\u0005\u00a4\n\u0005\u0003',
  '\u0005\u0005\u0005\u00a7\n\u0005\u0003\u0005\u0003\u0005\u0003\u0005',
  '\u0005\u0005\u00ac\n\u0005\u0003\u0006\u0003\u0006\u0003\u0007\u0003',
  '\u0007\u0006\u0007\u00b2\n\u0007\r\u0007\u000e\u0007\u00b3\u0003\u0007',
  '\u0003\u0007\u0003\b\u0003\b\u0003\b\u0005\b\u00bb\n\b\u0003\t\u0005',
  '\t\u00be\n\t\u0003\t\u0003\t\u0005\t\u00c2\n\t\u0003\t\u0005\t\u00c5',
  '\n\t\u0003\t\u0005\t\u00c8\n\t\u0003\n\u0003\n\u0006\n\u00cc\n\n\r\n',
  '\u000e\n\u00cd\u0003\n\u0003\n\u0003\u000b\u0003\u000b\u0003\u000b\u0003',
  '\u000b\u0003\f\u0003\f\u0003\f\u0003\r\u0003\r\u0003\r\u0005\r\u00dc',
  '\n\r\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0003\u000e\u0005',
  '\u000e\u00e3\n\u000e\u0003\u000e\u0003\u000e\u0003\u000f\u0003\u000f',
  '\u0003\u0010\u0003\u0010\u0003\u0010\u0003\u0011\u0003\u0011\u0005\u0011',
  '\u00ee\n\u0011\u0003\u0011\u0005\u0011\u00f1\n\u0011\u0003\u0011\u0003',
  '\u0011\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0003',
  '\u0012\u0003\u0012\u0003\u0012\u0003\u0012\u0005\u0012\u00fe\n\u0012',
  '\u0003\u0013\u0003\u0013\u0003\u0014\u0003\u0014\u0003\u0015\u0003\u0015',
  '\u0003\u0016\u0003\u0016\u0003\u0017\u0003\u0017\u0003\u0018\u0003\u0018',
  '\u0003\u0019\u0003\u0019\u0003\u0019\u0003\u0019\u0006\u0019\u0110\n',
  '\u0019\r\u0019\u000e\u0019\u0111\u0003\u0019\u0003\u0019\u0005\u0019',
  '\u0116\n\u0019\u0003\u001a\u0003\u001a\u0007\u001a\u011a\n\u001a\f\u001a',
  '\u000e\u001a\u011d\u000b\u001a\u0003\u001a\u0003\u001a\u0003\u001b\u0003',
  '\u001b\u0003\u001b\u0003\u001b\u0003\u001c\u0003\u001c\u0003\u001c\u0003',
  '\u001d\u0003\u001d\u0006\u001d\u012a\n\u001d\r\u001d\u000e\u001d\u012b',
  '\u0003\u001d\u0003\u001d\u0003\u001e\u0003\u001e\u0003\u001e\u0003\u001e',
  '\u0005\u001e\u0134\n\u001e\u0003\u001f\u0003\u001f\u0003\u001f\u0003',
  ' \u0003 \u0005 \u013b\n \u0003 \u0003 \u0005 \u013f\n \u0005 \u0141',
  '\n \u0003!\u0003!\u0003"\u0003"\u0003"\u0003"\u0003#\u0006#\u014a',
  '\n#\r#\u000e#\u014b\u0003$\u0003$\u0003$\u0005$\u0151\n$\u0003%\u0003',
  "%\u0003%\u0005%\u0156\n%\u0003&\u0003&\u0005&\u015a\n&\u0003'\u0003",
  "'\u0005'\u015e\n'\u0003'\u0003'\u0006'\u0162\n'\r'\u000e'\u0163",
  "\u0003'\u0003'\u0003(\u0003(\u0003(\u0003(\u0003)\u0003)\u0003)\u0005",
  ')\u016f\n)\u0003)\u0003)\u0006)\u0173\n)\r)\u000e)\u0174\u0003)\u0003',
  ')\u0003)\u0003)\u0003)\u0005)\u017c\n)\u0003*\u0003*\u0003*\u0003*\u0003',
  '+\u0003+\u0003,\u0003,\u0003,\u0003,\u0003,\u0003,\u0005,\u018a\n,\u0003',
  '-\u0003-\u0003-\u0003-\u0003-\u0003-\u0005-\u0192\n-\u0003.\u0005.\u0195',
  '\n.\u0003.\u0003.\u0003.\u0005.\u019a\n.\u0003/\u0003/\u0003/\u0003',
  '/\u0003/\u00030\u00050\u01a2\n0\u00030\u00030\u00030\u00050\u01a7\n',
  '0\u00030\u00050\u01aa\n0\u00030\u00050\u01ad\n0\u00031\u00031\u0003',
  '1\u00051\u01b2\n1\u00031\u00031\u00031\u00031\u00031\u00071\u01b9\n',
  '1\f1\u000e1\u01bc\u000b1\u00032\u00032\u00062\u01c0\n2\r2\u000e2\u01c1',
  '\u00032\u00032\u00033\u00053\u01c7\n3\u00033\u00033\u00053\u01cb\n3',
  '\u00033\u00033\u00033\u00053\u01d0\n3\u00034\u00034\u00064\u01d4\n4',
  '\r4\u000e4\u01d5\u00034\u00034\u00035\u00055\u01db\n5\u00035\u00035',
  '\u00035\u00035\u00055\u01e1\n5\u00035\u00055\u01e4\n5\u00036\u00036',
  '\u00036\u00036\u00056\u01ea\n6\u00036\u00056\u01ed\n6\u00036\u00036',
  '\u00036\u00036\u00036\u00036\u00056\u01f5\n6\u00036\u00036\u00036\u0003',
  '6\u00036\u00036\u00036\u00056\u01fe\n6\u00037\u00057\u0201\n7\u0003',
  '7\u00037\u00037\u00057\u0206\n7\u00037\u00057\u0209\n7\u00038\u0003',
  '8\u00038\u00038\u00058\u020f\n8\u00038\u00038\u00038\u00038\u00038\u0003',
  '8\u00038\u00058\u0218\n8\u00039\u00059\u021b\n9\u00039\u00039\u0003',
  '9\u00059\u0220\n9\u00039\u00059\u0223\n9\u0003:\u0003:\u0005:\u0227',
  '\n:\u0003:\u0003:\u0003:\u0007:\u022c\n:\f:\u000e:\u022f\u000b:\u0003',
  ';\u0003;\u0003;\u0003;\u0005;\u0235\n;\u0003;\u0003;\u0003;\u0003;\u0003',
  ';\u0003;\u0003;\u0005;\u023e\n;\u0003<\u0005<\u0241\n<\u0003<\u0003',
  '<\u0003<\u0005<\u0246\n<\u0003<\u0005<\u0249\n<\u0003=\u0003=\u0006',
  '=\u024d\n=\r=\u000e=\u024e\u0003=\u0003=\u0003>\u0005>\u0254\n>\u0003',
  '>\u0003>\u0005>\u0258\n>\u0003?\u0003?\u0003?\u0003?\u0005?\u025e\n',
  '?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0003?\u0005?\u0267\n?\u0003',
  '@\u0005@\u026a\n@\u0003@\u0003@\u0003@\u0005@\u026f\n@\u0003@\u0005',
  '@\u0272\n@\u0003A\u0003A\u0006A\u0276\nA\rA\u000eA\u0277\u0003A\u0003',
  'A\u0003B\u0003B\u0003B\u0003B\u0005B\u0280\nB\u0003B\u0003B\u0003B\u0003',
  'B\u0003B\u0003B\u0003B\u0005B\u0289\nB\u0003C\u0005C\u028c\nC\u0003',
  'C\u0003C\u0003C\u0003C\u0005C\u0292\nC\u0003C\u0003C\u0003C\u0003D\u0003',
  'D\u0003D\u0007D\u029a\nD\fD\u000eD\u029d\u000bD\u0003E\u0003E\u0005',
  'E\u02a1\nE\u0003F\u0003F\u0003G\u0003G\u0003H\u0003H\u0003H\u0002\u0003',
  '`I\u0002\u0004\u0006\b\n\f\u000e\u0010\u0012\u0014\u0016\u0018\u001a',
  '\u001c\u001e "$&(*,.02468:<>@BDFHJLNPRTVXZ\\^`bdfhjlnprtvxz|~\u0080',
  '\u0082\u0084\u0086\u0088\u008a\u008c\u008e\u0002\u0007\u0003\u0002\u0003',
  '\u0005\u0003\u0002\u000e\u000f\u0003\u000278\u0003\u0002$*\u0003\u0002',
  '+5\u0002\u02cc\u0002\u0091\u0003\u0002\u0002\u0002\u0004\u0098\u0003',
  '\u0002\u0002\u0002\u0006\u009c\u0003\u0002\u0002\u0002\b\u00ab\u0003',
  '\u0002\u0002\u0002\n\u00ad\u0003\u0002\u0002\u0002\f\u00af\u0003\u0002',
  '\u0002\u0002\u000e\u00ba\u0003\u0002\u0002\u0002\u0010\u00bd\u0003\u0002',
  '\u0002\u0002\u0012\u00c9\u0003\u0002\u0002\u0002\u0014\u00d1\u0003\u0002',
  '\u0002\u0002\u0016\u00d5\u0003\u0002\u0002\u0002\u0018\u00d8\u0003\u0002',
  '\u0002\u0002\u001a\u00dd\u0003\u0002\u0002\u0002\u001c\u00e6\u0003\u0002',
  '\u0002\u0002\u001e\u00e8\u0003\u0002\u0002\u0002 \u00eb\u0003\u0002',
  '\u0002\u0002"\u00fd\u0003\u0002\u0002\u0002$\u00ff\u0003\u0002\u0002',
  '\u0002&\u0101\u0003\u0002\u0002\u0002(\u0103\u0003\u0002\u0002\u0002',
  '*\u0105\u0003\u0002\u0002\u0002,\u0107\u0003\u0002\u0002\u0002.\u0109',
  '\u0003\u0002\u0002\u00020\u0115\u0003\u0002\u0002\u00022\u0117\u0003',
  '\u0002\u0002\u00024\u0120\u0003\u0002\u0002\u00026\u0124\u0003\u0002',
  '\u0002\u00028\u0127\u0003\u0002\u0002\u0002:\u012f\u0003\u0002\u0002',
  '\u0002<\u0135\u0003\u0002\u0002\u0002>\u0140\u0003\u0002\u0002\u0002',
  '@\u0142\u0003\u0002\u0002\u0002B\u0144\u0003\u0002\u0002\u0002D\u0149',
  '\u0003\u0002\u0002\u0002F\u014d\u0003\u0002\u0002\u0002H\u0155\u0003',
  '\u0002\u0002\u0002J\u0159\u0003\u0002\u0002\u0002L\u015b\u0003\u0002',
  '\u0002\u0002N\u0167\u0003\u0002\u0002\u0002P\u017b\u0003\u0002\u0002',
  '\u0002R\u017d\u0003\u0002\u0002\u0002T\u0181\u0003\u0002\u0002\u0002',
  'V\u0189\u0003\u0002\u0002\u0002X\u0191\u0003\u0002\u0002\u0002Z\u0194',
  '\u0003\u0002\u0002\u0002\\\u019b\u0003\u0002\u0002\u0002^\u01a1\u0003',
  '\u0002\u0002\u0002`\u01ae\u0003\u0002\u0002\u0002b\u01bd\u0003\u0002',
  '\u0002\u0002d\u01c6\u0003\u0002\u0002\u0002f\u01d1\u0003\u0002\u0002',
  '\u0002h\u01da\u0003\u0002\u0002\u0002j\u01fd\u0003\u0002\u0002\u0002',
  'l\u0200\u0003\u0002\u0002\u0002n\u0217\u0003\u0002\u0002\u0002p\u021a',
  '\u0003\u0002\u0002\u0002r\u0224\u0003\u0002\u0002\u0002t\u023d\u0003',
  '\u0002\u0002\u0002v\u0240\u0003\u0002\u0002\u0002x\u024a\u0003\u0002',
  '\u0002\u0002z\u0253\u0003\u0002\u0002\u0002|\u0266\u0003\u0002\u0002',
  '\u0002~\u0269\u0003\u0002\u0002\u0002\u0080\u0273\u0003\u0002\u0002',
  '\u0002\u0082\u0288\u0003\u0002\u0002\u0002\u0084\u028b\u0003\u0002\u0002',
  '\u0002\u0086\u0296\u0003\u0002\u0002\u0002\u0088\u02a0\u0003\u0002\u0002',
  '\u0002\u008a\u02a2\u0003\u0002\u0002\u0002\u008c\u02a4\u0003\u0002\u0002',
  '\u0002\u008e\u02a6\u0003\u0002\u0002\u0002\u0090\u0092\u0005\u0004\u0003',
  '\u0002\u0091\u0090\u0003\u0002\u0002\u0002\u0092\u0093\u0003\u0002\u0002',
  '\u0002\u0093\u0091\u0003\u0002\u0002\u0002\u0093\u0094\u0003\u0002\u0002',
  '\u0002\u0094\u0003\u0003\u0002\u0002\u0002\u0095\u0099\u0005\u0006\u0004',
  '\u0002\u0096\u0099\u0005H%\u0002\u0097\u0099\u0005J&\u0002\u0098\u0095',
  '\u0003\u0002\u0002\u0002\u0098\u0096\u0003\u0002\u0002\u0002\u0098\u0097',
  '\u0003\u0002\u0002\u0002\u0099\u0005\u0003\u0002\u0002\u0002\u009a\u009d',
  '\u0005\b\u0005\u0002\u009b\u009d\u0005\u001a\u000e\u0002\u009c\u009a',
  '\u0003\u0002\u0002\u0002\u009c\u009b\u0003\u0002\u0002\u0002\u009d\u0007',
  '\u0003\u0002\u0002\u0002\u009e\u00a0\u0005\n\u0006\u0002\u009f\u00a1',
  '\u0005\u008eH\u0002\u00a0\u009f\u0003\u0002\u0002\u0002\u00a0\u00a1',
  '\u0003\u0002\u0002\u0002\u00a1\u00a3\u0003\u0002\u0002\u0002\u00a2\u00a4',
  '\u00058\u001d\u0002\u00a3\u00a2\u0003\u0002\u0002\u0002\u00a3\u00a4',
  '\u0003\u0002\u0002\u0002\u00a4\u00a6\u0003\u0002\u0002\u0002\u00a5\u00a7',
  '\u0005D#\u0002\u00a6\u00a5\u0003\u0002\u0002\u0002\u00a6\u00a7\u0003',
  '\u0002\u0002\u0002\u00a7\u00a8\u0003\u0002\u0002\u0002\u00a8\u00a9\u0005',
  '\f\u0007\u0002\u00a9\u00ac\u0003\u0002\u0002\u0002\u00aa\u00ac\u0005',
  '\f\u0007\u0002\u00ab\u009e\u0003\u0002\u0002\u0002\u00ab\u00aa\u0003',
  '\u0002\u0002\u0002\u00ac\t\u0003\u0002\u0002\u0002\u00ad\u00ae\t\u0002',
  '\u0002\u0002\u00ae\u000b\u0003\u0002\u0002\u0002\u00af\u00b1\u0007\u0006',
  '\u0002\u0002\u00b0\u00b2\u0005\u000e\b\u0002\u00b1\u00b0\u0003\u0002',
  '\u0002\u0002\u00b2\u00b3\u0003\u0002\u0002\u0002\u00b3\u00b1\u0003\u0002',
  '\u0002\u0002\u00b3\u00b4\u0003\u0002\u0002\u0002\u00b4\u00b5\u0003\u0002',
  '\u0002\u0002\u00b5\u00b6\u0007\u0007\u0002\u0002\u00b6\r\u0003\u0002',
  '\u0002\u0002\u00b7\u00bb\u0005\u0010\t\u0002\u00b8\u00bb\u0005\u0018',
  '\r\u0002\u00b9\u00bb\u0005 \u0011\u0002\u00ba\u00b7\u0003\u0002\u0002',
  '\u0002\u00ba\u00b8\u0003\u0002\u0002\u0002\u00ba\u00b9\u0003\u0002\u0002',
  '\u0002\u00bb\u000f\u0003\u0002\u0002\u0002\u00bc\u00be\u0005\u0016\f',
  '\u0002\u00bd\u00bc\u0003\u0002\u0002\u0002\u00bd\u00be\u0003\u0002\u0002',
  '\u0002\u00be\u00bf\u0003\u0002\u0002\u0002\u00bf\u00c1\u0005\u008eH',
  '\u0002\u00c0\u00c2\u0005\u0012\n\u0002\u00c1\u00c0\u0003\u0002\u0002',
  '\u0002\u00c1\u00c2\u0003\u0002\u0002\u0002\u00c2\u00c4\u0003\u0002\u0002',
  '\u0002\u00c3\u00c5\u0005D#\u0002\u00c4\u00c3\u0003\u0002\u0002\u0002',
  '\u00c4\u00c5\u0003\u0002\u0002\u0002\u00c5\u00c7\u0003\u0002\u0002\u0002',
  '\u00c6\u00c8\u0005\f\u0007\u0002\u00c7\u00c6\u0003\u0002\u0002\u0002',
  '\u00c7\u00c8\u0003\u0002\u0002\u0002\u00c8\u0011\u0003\u0002\u0002\u0002',
  '\u00c9\u00cb\u0007\b\u0002\u0002\u00ca\u00cc\u0005\u0014\u000b\u0002',
  '\u00cb\u00ca\u0003\u0002\u0002\u0002\u00cc\u00cd\u0003\u0002\u0002\u0002',
  '\u00cd\u00cb\u0003\u0002\u0002\u0002\u00cd\u00ce\u0003\u0002\u0002\u0002',
  '\u00ce\u00cf\u0003\u0002\u0002\u0002\u00cf\u00d0\u0007\t\u0002\u0002',
  '\u00d0\u0013\u0003\u0002\u0002\u0002\u00d1\u00d2\u0005\u008eH\u0002',
  '\u00d2\u00d3\u0007\n\u0002\u0002\u00d3\u00d4\u0005"\u0012\u0002\u00d4',
  '\u0015\u0003\u0002\u0002\u0002\u00d5\u00d6\u0005\u008eH\u0002\u00d6',
  '\u00d7\u0007\n\u0002\u0002\u00d7\u0017\u0003\u0002\u0002\u0002\u00d8',
  '\u00d9\u0007\u000b\u0002\u0002\u00d9\u00db\u0005\u001c\u000f\u0002\u00da',
  '\u00dc\u0005D#\u0002\u00db\u00da\u0003\u0002\u0002\u0002\u00db\u00dc',
  '\u0003\u0002\u0002\u0002\u00dc\u0019\u0003\u0002\u0002\u0002\u00dd\u00de',
  '\u0007\f\u0002\u0002\u00de\u00df\u0005\u001c\u000f\u0002\u00df\u00e0',
  '\u0007\r\u0002\u0002\u00e0\u00e2\u0005\u001e\u0010\u0002\u00e1\u00e3',
  '\u0005D#\u0002\u00e2\u00e1\u0003\u0002\u0002\u0002\u00e2\u00e3\u0003',
  '\u0002\u0002\u0002\u00e3\u00e4\u0003\u0002\u0002\u0002\u00e4\u00e5\u0005',
  '\f\u0007\u0002\u00e5\u001b\u0003\u0002\u0002\u0002\u00e6\u00e7\u0005',
  '\u008eH\u0002\u00e7\u001d\u0003\u0002\u0002\u0002\u00e8\u00e9\u0007',
  '\r\u0002\u0002\u00e9\u00ea\u0005@!\u0002\u00ea\u001f\u0003\u0002\u0002',
  '\u0002\u00eb\u00ed\u0007\u000b\u0002\u0002\u00ec\u00ee\u0005\u001e\u0010',
  '\u0002\u00ed\u00ec\u0003\u0002\u0002\u0002\u00ed\u00ee\u0003\u0002\u0002',
  '\u0002\u00ee\u00f0\u0003\u0002\u0002\u0002\u00ef\u00f1\u0005D#\u0002',
  '\u00f0\u00ef\u0003\u0002\u0002\u0002\u00f0\u00f1\u0003\u0002\u0002\u0002',
  '\u00f1\u00f2\u0003\u0002\u0002\u0002\u00f2\u00f3\u0005\f\u0007\u0002',
  '\u00f3!\u0003\u0002\u0002\u0002\u00f4\u00fe\u00056\u001c\u0002\u00f5',
  '\u00fe\u0005$\u0013\u0002\u00f6\u00fe\u0005&\u0014\u0002\u00f7\u00fe',
  '\u0005*\u0016\u0002\u00f8\u00fe\u0005(\u0015\u0002\u00f9\u00fe\u0005',
  ',\u0017\u0002\u00fa\u00fe\u0005.\u0018\u0002\u00fb\u00fe\u00050\u0019',
  '\u0002\u00fc\u00fe\u00052\u001a\u0002\u00fd\u00f4\u0003\u0002\u0002',
  '\u0002\u00fd\u00f5\u0003\u0002\u0002\u0002\u00fd\u00f6\u0003\u0002\u0002',
  '\u0002\u00fd\u00f7\u0003\u0002\u0002\u0002\u00fd\u00f8\u0003\u0002\u0002',
  '\u0002\u00fd\u00f9\u0003\u0002\u0002\u0002\u00fd\u00fa\u0003\u0002\u0002',
  '\u0002\u00fd\u00fb\u0003\u0002\u0002\u0002\u00fd\u00fc\u0003\u0002\u0002',
  '\u0002\u00fe#\u0003\u0002\u0002\u0002\u00ff\u0100\u0007;\u0002\u0002',
  '\u0100%\u0003\u0002\u0002\u0002\u0101\u0102\u0007:\u0002\u0002\u0102',
  "'\u0003\u0002\u0002\u0002\u0103\u0104\t\u0003\u0002\u0002\u0104)\u0003",
  '\u0002\u0002\u0002\u0105\u0106\t\u0004\u0002\u0002\u0106+\u0003\u0002',
  '\u0002\u0002\u0107\u0108\u0007\u0010\u0002\u0002\u0108-\u0003\u0002',
  '\u0002\u0002\u0109\u010a\u0005\u008eH\u0002\u010a/\u0003\u0002\u0002',
  '\u0002\u010b\u010c\u0007\u0011\u0002\u0002\u010c\u0116\u0007\u0012\u0002',
  '\u0002\u010d\u010f\u0007\u0011\u0002\u0002\u010e\u0110\u0005"\u0012',
  '\u0002\u010f\u010e\u0003\u0002\u0002\u0002\u0110\u0111\u0003\u0002\u0002',
  '\u0002\u0111\u010f\u0003\u0002\u0002\u0002\u0111\u0112\u0003\u0002\u0002',
  '\u0002\u0112\u0113\u0003\u0002\u0002\u0002\u0113\u0114\u0007\u0012\u0002',
  '\u0002\u0114\u0116\u0003\u0002\u0002\u0002\u0115\u010b\u0003\u0002\u0002',
  '\u0002\u0115\u010d\u0003\u0002\u0002\u0002\u01161\u0003\u0002\u0002',
  '\u0002\u0117\u011b\u0007\u0006\u0002\u0002\u0118\u011a\u00054\u001b',
  '\u0002\u0119\u0118\u0003\u0002\u0002\u0002\u011a\u011d\u0003\u0002\u0002',
  '\u0002\u011b\u0119\u0003\u0002\u0002\u0002\u011b\u011c\u0003\u0002\u0002',
  '\u0002\u011c\u011e\u0003\u0002\u0002\u0002\u011d\u011b\u0003\u0002\u0002',
  '\u0002\u011e\u011f\u0007\u0007\u0002\u0002\u011f3\u0003\u0002\u0002',
  '\u0002\u0120\u0121\u0005\u008eH\u0002\u0121\u0122\u0007\n\u0002\u0002',
  '\u0122\u0123\u0005"\u0012\u0002\u01235\u0003\u0002\u0002\u0002\u0124',
  '\u0125\u0007\u0013\u0002\u0002\u0125\u0126\u0005\u008eH\u0002\u0126',
  '7\u0003\u0002\u0002\u0002\u0127\u0129\u0007\b\u0002\u0002\u0128\u012a',
  '\u0005:\u001e\u0002\u0129\u0128\u0003\u0002\u0002\u0002\u012a\u012b',
  '\u0003\u0002\u0002\u0002\u012b\u0129\u0003\u0002\u0002\u0002\u012b\u012c',
  '\u0003\u0002\u0002\u0002\u012c\u012d\u0003\u0002\u0002\u0002\u012d\u012e',
  '\u0007\t\u0002\u0002\u012e9\u0003\u0002\u0002\u0002\u012f\u0130\u0005',
  '6\u001c\u0002\u0130\u0131\u0007\n\u0002\u0002\u0131\u0133\u0005> \u0002',
  '\u0132\u0134\u0005<\u001f\u0002\u0133\u0132\u0003\u0002\u0002\u0002',
  '\u0133\u0134\u0003\u0002\u0002\u0002\u0134;\u0003\u0002\u0002\u0002',
  '\u0135\u0136\u0007\u0014\u0002\u0002\u0136\u0137\u0005"\u0012\u0002',
  '\u0137=\u0003\u0002\u0002\u0002\u0138\u013a\u0005@!\u0002\u0139\u013b',
  '\u0007\u0015\u0002\u0002\u013a\u0139\u0003\u0002\u0002\u0002\u013a\u013b',
  '\u0003\u0002\u0002\u0002\u013b\u0141\u0003\u0002\u0002\u0002\u013c\u013e',
  '\u0005B"\u0002\u013d\u013f\u0007\u0015\u0002\u0002\u013e\u013d\u0003',
  '\u0002\u0002\u0002\u013e\u013f\u0003\u0002\u0002\u0002\u013f\u0141\u0003',
  '\u0002\u0002\u0002\u0140\u0138\u0003\u0002\u0002\u0002\u0140\u013c\u0003',
  '\u0002\u0002\u0002\u0141?\u0003\u0002\u0002\u0002\u0142\u0143\u0005',
  '\u008eH\u0002\u0143A\u0003\u0002\u0002\u0002\u0144\u0145\u0007\u0011',
  '\u0002\u0002\u0145\u0146\u0005> \u0002\u0146\u0147\u0007\u0012\u0002',
  '\u0002\u0147C\u0003\u0002\u0002\u0002\u0148\u014a\u0005F$\u0002\u0149',
  '\u0148\u0003\u0002\u0002\u0002\u014a\u014b\u0003\u0002\u0002\u0002\u014b',
  '\u0149\u0003\u0002\u0002\u0002\u014b\u014c\u0003\u0002\u0002\u0002\u014c',
  'E\u0003\u0002\u0002\u0002\u014d\u014e\u0007\u0016\u0002\u0002\u014e',
  '\u0150\u0005\u008eH\u0002\u014f\u0151\u0005\u0012\n\u0002\u0150\u014f',
  '\u0003\u0002\u0002\u0002\u0150\u0151\u0003\u0002\u0002\u0002\u0151G',
  "\u0003\u0002\u0002\u0002\u0152\u0156\u0005L'\u0002\u0153\u0156\u0005",
  'V,\u0002\u0154\u0156\u0005\u0084C\u0002\u0155\u0152\u0003\u0002\u0002',
  '\u0002\u0155\u0153\u0003\u0002\u0002\u0002\u0155\u0154\u0003\u0002\u0002',
  '\u0002\u0156I\u0003\u0002\u0002\u0002\u0157\u015a\u0005P)\u0002\u0158',
  '\u015a\u0005X-\u0002\u0159\u0157\u0003\u0002\u0002\u0002\u0159\u0158',
  '\u0003\u0002\u0002\u0002\u015aK\u0003\u0002\u0002\u0002\u015b\u015d',
  '\u0007\u0017\u0002\u0002\u015c\u015e\u0005D#\u0002\u015d\u015c\u0003',
  '\u0002\u0002\u0002\u015d\u015e\u0003\u0002\u0002\u0002\u015e\u015f\u0003',
  '\u0002\u0002\u0002\u015f\u0161\u0007\u0006\u0002\u0002\u0160\u0162\u0005',
  'N(\u0002\u0161\u0160\u0003\u0002\u0002\u0002\u0162\u0163\u0003\u0002',
  '\u0002\u0002\u0163\u0161\u0003\u0002\u0002\u0002\u0163\u0164\u0003\u0002',
  '\u0002\u0002\u0164\u0165\u0003\u0002\u0002\u0002\u0165\u0166\u0007\u0007',
  '\u0002\u0002\u0166M\u0003\u0002\u0002\u0002\u0167\u0168\u0005\n\u0006',
  '\u0002\u0168\u0169\u0007\n\u0002\u0002\u0169\u016a\u0005@!\u0002\u016a',
  'O\u0003\u0002\u0002\u0002\u016b\u016c\u0007\u0018\u0002\u0002\u016c',
  '\u016e\u0007\u0017\u0002\u0002\u016d\u016f\u0005D#\u0002\u016e\u016d',
  '\u0003\u0002\u0002\u0002\u016e\u016f\u0003\u0002\u0002\u0002\u016f\u0170',
  '\u0003\u0002\u0002\u0002\u0170\u0172\u0007\u0006\u0002\u0002\u0171\u0173',
  '\u0005R*\u0002\u0172\u0171\u0003\u0002\u0002\u0002\u0173\u0174\u0003',
  '\u0002\u0002\u0002\u0174\u0172\u0003\u0002\u0002\u0002\u0174\u0175\u0003',
  '\u0002\u0002\u0002\u0175\u0176\u0003\u0002\u0002\u0002\u0176\u0177\u0007',
  '\u0007\u0002\u0002\u0177\u017c\u0003\u0002\u0002\u0002\u0178\u0179\u0007',
  '\u0018\u0002\u0002\u0179\u017a\u0007\u0017\u0002\u0002\u017a\u017c\u0005',
  'D#\u0002\u017b\u016b\u0003\u0002\u0002\u0002\u017b\u0178\u0003\u0002',
  '\u0002\u0002\u017cQ\u0003\u0002\u0002\u0002\u017d\u017e\u0005\n\u0006',
  '\u0002\u017e\u017f\u0007\n\u0002\u0002\u017f\u0180\u0005@!\u0002\u0180',
  'S\u0003\u0002\u0002\u0002\u0181\u0182\u0005*\u0016\u0002\u0182U\u0003',
  '\u0002\u0002\u0002\u0183\u018a\u0005Z.\u0002\u0184\u018a\u0005^0\u0002',
  '\u0185\u018a\u0005l7\u0002\u0186\u018a\u0005p9\u0002\u0187\u018a\u0005',
  'v<\u0002\u0188\u018a\u0005~@\u0002\u0189\u0183\u0003\u0002\u0002\u0002',
  '\u0189\u0184\u0003\u0002\u0002\u0002\u0189\u0185\u0003\u0002\u0002\u0002',
  '\u0189\u0186\u0003\u0002\u0002\u0002\u0189\u0187\u0003\u0002\u0002\u0002',
  '\u0189\u0188\u0003\u0002\u0002\u0002\u018aW\u0003\u0002\u0002\u0002',
  '\u018b\u0192\u0005\\/\u0002\u018c\u0192\u0005j6\u0002\u018d\u0192\u0005',
  'n8\u0002\u018e\u0192\u0005t;\u0002\u018f\u0192\u0005|?\u0002\u0190\u0192',
  '\u0005\u0082B\u0002\u0191\u018b\u0003\u0002\u0002\u0002\u0191\u018c',
  '\u0003\u0002\u0002\u0002\u0191\u018d\u0003\u0002\u0002\u0002\u0191\u018e',
  '\u0003\u0002\u0002\u0002\u0191\u018f\u0003\u0002\u0002\u0002\u0191\u0190',
  '\u0003\u0002\u0002\u0002\u0192Y\u0003\u0002\u0002\u0002\u0193\u0195',
  '\u0005T+\u0002\u0194\u0193\u0003\u0002\u0002\u0002\u0194\u0195\u0003',
  '\u0002\u0002\u0002\u0195\u0196\u0003\u0002\u0002\u0002\u0196\u0197\u0007',
  '\u0019\u0002\u0002\u0197\u0199\u0005\u008eH\u0002\u0198\u019a\u0005',
  'D#\u0002\u0199\u0198\u0003\u0002\u0002\u0002\u0199\u019a\u0003\u0002',
  '\u0002\u0002\u019a[\u0003\u0002\u0002\u0002\u019b\u019c\u0007\u001a',
  '\u0002\u0002\u019c\u019d\u0007\u0019\u0002\u0002\u019d\u019e\u0005\u008e',
  'H\u0002\u019e\u019f\u0005D#\u0002\u019f]\u0003\u0002\u0002\u0002\u01a0',
  '\u01a2\u0005T+\u0002\u01a1\u01a0\u0003\u0002\u0002\u0002\u01a1\u01a2',
  '\u0003\u0002\u0002\u0002\u01a2\u01a3\u0003\u0002\u0002\u0002\u01a3\u01a4',
  '\u0007\u001b\u0002\u0002\u01a4\u01a6\u0005\u008eH\u0002\u01a5\u01a7',
  '\u0005`1\u0002\u01a6\u01a5\u0003\u0002\u0002\u0002\u01a6\u01a7\u0003',
  '\u0002\u0002\u0002\u01a7\u01a9\u0003\u0002\u0002\u0002\u01a8\u01aa\u0005',
  'D#\u0002\u01a9\u01a8\u0003\u0002\u0002\u0002\u01a9\u01aa\u0003\u0002',
  '\u0002\u0002\u01aa\u01ac\u0003\u0002\u0002\u0002\u01ab\u01ad\u0005b',
  '2\u0002\u01ac\u01ab\u0003\u0002\u0002\u0002\u01ac\u01ad\u0003\u0002',
  '\u0002\u0002\u01ad_\u0003\u0002\u0002\u0002\u01ae\u01af\b1\u0001\u0002',
  '\u01af\u01b1\u0007\u001c\u0002\u0002\u01b0\u01b2\u0007\u001d\u0002\u0002',
  '\u01b1\u01b0\u0003\u0002\u0002\u0002\u01b1\u01b2\u0003\u0002\u0002\u0002',
  '\u01b2\u01b3\u0003\u0002\u0002\u0002\u01b3\u01b4\u0005@!\u0002\u01b4',
  '\u01ba\u0003\u0002\u0002\u0002\u01b5\u01b6\f\u0003\u0002\u0002\u01b6',
  '\u01b7\u0007\u001d\u0002\u0002\u01b7\u01b9\u0005@!\u0002\u01b8\u01b5',
  '\u0003\u0002\u0002\u0002\u01b9\u01bc\u0003\u0002\u0002\u0002\u01ba\u01b8',
  '\u0003\u0002\u0002\u0002\u01ba\u01bb\u0003\u0002\u0002\u0002\u01bba',
  '\u0003\u0002\u0002\u0002\u01bc\u01ba\u0003\u0002\u0002\u0002\u01bd\u01bf',
  '\u0007\u0006\u0002\u0002\u01be\u01c0\u0005d3\u0002\u01bf\u01be\u0003',
  '\u0002\u0002\u0002\u01c0\u01c1\u0003\u0002\u0002\u0002\u01c1\u01bf\u0003',
  '\u0002\u0002\u0002\u01c1\u01c2\u0003\u0002\u0002\u0002\u01c2\u01c3\u0003',
  '\u0002\u0002\u0002\u01c3\u01c4\u0007\u0007\u0002\u0002\u01c4c\u0003',
  '\u0002\u0002\u0002\u01c5\u01c7\u0005T+\u0002\u01c6\u01c5\u0003\u0002',
  '\u0002\u0002\u01c6\u01c7\u0003\u0002\u0002\u0002\u01c7\u01c8\u0003\u0002',
  '\u0002\u0002\u01c8\u01ca\u0005\u008eH\u0002\u01c9\u01cb\u0005f4\u0002',
  '\u01ca\u01c9\u0003\u0002\u0002\u0002\u01ca\u01cb\u0003\u0002\u0002\u0002',
  '\u01cb\u01cc\u0003\u0002\u0002\u0002\u01cc\u01cd\u0007\n\u0002\u0002',
  '\u01cd\u01cf\u0005> \u0002\u01ce\u01d0\u0005D#\u0002\u01cf\u01ce\u0003',
  '\u0002\u0002\u0002\u01cf\u01d0\u0003\u0002\u0002\u0002\u01d0e\u0003',
  '\u0002\u0002\u0002\u01d1\u01d3\u0007\b\u0002\u0002\u01d2\u01d4\u0005',
  'h5\u0002\u01d3\u01d2\u0003\u0002\u0002\u0002\u01d4\u01d5\u0003\u0002',
  '\u0002\u0002\u01d5\u01d3\u0003\u0002\u0002\u0002\u01d5\u01d6\u0003\u0002',
  '\u0002\u0002\u01d6\u01d7\u0003\u0002\u0002\u0002\u01d7\u01d8\u0007\t',
  '\u0002\u0002\u01d8g\u0003\u0002\u0002\u0002\u01d9\u01db\u0005T+\u0002',
  '\u01da\u01d9\u0003\u0002\u0002\u0002\u01da\u01db\u0003\u0002\u0002\u0002',
  '\u01db\u01dc\u0003\u0002\u0002\u0002\u01dc\u01dd\u0005\u008eH\u0002',
  '\u01dd\u01de\u0007\n\u0002\u0002\u01de\u01e0\u0005> \u0002\u01df\u01e1',
  '\u0005<\u001f\u0002\u01e0\u01df\u0003\u0002\u0002\u0002\u01e0\u01e1',
  '\u0003\u0002\u0002\u0002\u01e1\u01e3\u0003\u0002\u0002\u0002\u01e2\u01e4',
  '\u0005D#\u0002\u01e3\u01e2\u0003\u0002\u0002\u0002\u01e3\u01e4\u0003',
  '\u0002\u0002\u0002\u01e4i\u0003\u0002\u0002\u0002\u01e5\u01e6\u0007',
  '\u0018\u0002\u0002\u01e6\u01e7\u0007\u001b\u0002\u0002\u01e7\u01e9\u0005',
  '\u008eH\u0002\u01e8\u01ea\u0005`1\u0002\u01e9\u01e8\u0003\u0002\u0002',
  '\u0002\u01e9\u01ea\u0003\u0002\u0002\u0002\u01ea\u01ec\u0003\u0002\u0002',
  '\u0002\u01eb\u01ed\u0005D#\u0002\u01ec\u01eb\u0003\u0002\u0002\u0002',
  '\u01ec\u01ed\u0003\u0002\u0002\u0002\u01ed\u01ee\u0003\u0002\u0002\u0002',
  '\u01ee\u01ef\u0005b2\u0002\u01ef\u01fe\u0003\u0002\u0002\u0002\u01f0',
  '\u01f1\u0007\u0018\u0002\u0002\u01f1\u01f2\u0007\u001b\u0002\u0002\u01f2',
  '\u01f4\u0005\u008eH\u0002\u01f3\u01f5\u0005`1\u0002\u01f4\u01f3\u0003',
  '\u0002\u0002\u0002\u01f4\u01f5\u0003\u0002\u0002\u0002\u01f5\u01f6\u0003',
  '\u0002\u0002\u0002\u01f6\u01f7\u0005D#\u0002\u01f7\u01fe\u0003\u0002',
  '\u0002\u0002\u01f8\u01f9\u0007\u0018\u0002\u0002\u01f9\u01fa\u0007\u001b',
  '\u0002\u0002\u01fa\u01fb\u0005\u008eH\u0002\u01fb\u01fc\u0005`1\u0002',
  '\u01fc\u01fe\u0003\u0002\u0002\u0002\u01fd\u01e5\u0003\u0002\u0002\u0002',
  '\u01fd\u01f0\u0003\u0002\u0002\u0002\u01fd\u01f8\u0003\u0002\u0002\u0002',
  '\u01fek\u0003\u0002\u0002\u0002\u01ff\u0201\u0005T+\u0002\u0200\u01ff',
  '\u0003\u0002\u0002\u0002\u0200\u0201\u0003\u0002\u0002\u0002\u0201\u0202',
  '\u0003\u0002\u0002\u0002\u0202\u0203\u0007\u001e\u0002\u0002\u0203\u0205',
  '\u0005\u008eH\u0002\u0204\u0206\u0005D#\u0002\u0205\u0204\u0003\u0002',
  '\u0002\u0002\u0205\u0206\u0003\u0002\u0002\u0002\u0206\u0208\u0003\u0002',
  '\u0002\u0002\u0207\u0209\u0005b2\u0002\u0208\u0207\u0003\u0002\u0002',
  '\u0002\u0208\u0209\u0003\u0002\u0002\u0002\u0209m\u0003\u0002\u0002',
  '\u0002\u020a\u020b\u0007\u0018\u0002\u0002\u020b\u020c\u0007\u001e\u0002',
  '\u0002\u020c\u020e\u0005\u008eH\u0002\u020d\u020f\u0005D#\u0002\u020e',
  '\u020d\u0003\u0002\u0002\u0002\u020e\u020f\u0003\u0002\u0002\u0002\u020f',
  '\u0210\u0003\u0002\u0002\u0002\u0210\u0211\u0005b2\u0002\u0211\u0218',
  '\u0003\u0002\u0002\u0002\u0212\u0213\u0007\u0018\u0002\u0002\u0213\u0214',
  '\u0007\u001e\u0002\u0002\u0214\u0215\u0005\u008eH\u0002\u0215\u0216',
  '\u0005D#\u0002\u0216\u0218\u0003\u0002\u0002\u0002\u0217\u020a\u0003',
  '\u0002\u0002\u0002\u0217\u0212\u0003\u0002\u0002\u0002\u0218o\u0003',
  '\u0002\u0002\u0002\u0219\u021b\u0005T+\u0002\u021a\u0219\u0003\u0002',
  '\u0002\u0002\u021a\u021b\u0003\u0002\u0002\u0002\u021b\u021c\u0003\u0002',
  '\u0002\u0002\u021c\u021d\u0007\u001f\u0002\u0002\u021d\u021f\u0005\u008e',
  'H\u0002\u021e\u0220\u0005D#\u0002\u021f\u021e\u0003\u0002\u0002\u0002',
  '\u021f\u0220\u0003\u0002\u0002\u0002\u0220\u0222\u0003\u0002\u0002\u0002',
  '\u0221\u0223\u0005r:\u0002\u0222\u0221\u0003\u0002\u0002\u0002\u0222',
  '\u0223\u0003\u0002\u0002\u0002\u0223q\u0003\u0002\u0002\u0002\u0224',
  '\u0226\u0007\u0014\u0002\u0002\u0225\u0227\u0007 \u0002\u0002\u0226',
  '\u0225\u0003\u0002\u0002\u0002\u0226\u0227\u0003\u0002\u0002\u0002\u0227',
  '\u0228\u0003\u0002\u0002\u0002\u0228\u022d\u0005@!\u0002\u0229\u022a',
  '\u0007 \u0002\u0002\u022a\u022c\u0005@!\u0002\u022b\u0229\u0003\u0002',
  '\u0002\u0002\u022c\u022f\u0003\u0002\u0002\u0002\u022d\u022b\u0003\u0002',
  '\u0002\u0002\u022d\u022e\u0003\u0002\u0002\u0002\u022es\u0003\u0002',
  '\u0002\u0002\u022f\u022d\u0003\u0002\u0002\u0002\u0230\u0231\u0007\u0018',
  '\u0002\u0002\u0231\u0232\u0007\u001f\u0002\u0002\u0232\u0234\u0005\u008e',
  'H\u0002\u0233\u0235\u0005D#\u0002\u0234\u0233\u0003\u0002\u0002\u0002',
  '\u0234\u0235\u0003\u0002\u0002\u0002\u0235\u0236\u0003\u0002\u0002\u0002',
  '\u0236\u0237\u0005r:\u0002\u0237\u023e\u0003\u0002\u0002\u0002\u0238',
  '\u0239\u0007\u0018\u0002\u0002\u0239\u023a\u0007\u001f\u0002\u0002\u023a',
  '\u023b\u0005\u008eH\u0002\u023b\u023c\u0005D#\u0002\u023c\u023e\u0003',
  '\u0002\u0002\u0002\u023d\u0230\u0003\u0002\u0002\u0002\u023d\u0238\u0003',
  '\u0002\u0002\u0002\u023eu\u0003\u0002\u0002\u0002\u023f\u0241\u0005',
  'T+\u0002\u0240\u023f\u0003\u0002\u0002\u0002\u0240\u0241\u0003\u0002',
  '\u0002\u0002\u0241\u0242\u0003\u0002\u0002\u0002\u0242\u0243\u0007!',
  '\u0002\u0002\u0243\u0245\u0005\u008eH\u0002\u0244\u0246\u0005D#\u0002',
  '\u0245\u0244\u0003\u0002\u0002\u0002\u0245\u0246\u0003\u0002\u0002\u0002',
  '\u0246\u0248\u0003\u0002\u0002\u0002\u0247\u0249\u0005x=\u0002\u0248',
  '\u0247\u0003\u0002\u0002\u0002\u0248\u0249\u0003\u0002\u0002\u0002\u0249',
  'w\u0003\u0002\u0002\u0002\u024a\u024c\u0007\u0006\u0002\u0002\u024b',
  '\u024d\u0005z>\u0002\u024c\u024b\u0003\u0002\u0002\u0002\u024d\u024e',
  '\u0003\u0002\u0002\u0002\u024e\u024c\u0003\u0002\u0002\u0002\u024e\u024f',
  '\u0003\u0002\u0002\u0002\u024f\u0250\u0003\u0002\u0002\u0002\u0250\u0251',
  '\u0007\u0007\u0002\u0002\u0251y\u0003\u0002\u0002\u0002\u0252\u0254',
  '\u0005T+\u0002\u0253\u0252\u0003\u0002\u0002\u0002\u0253\u0254\u0003',
  '\u0002\u0002\u0002\u0254\u0255\u0003\u0002\u0002\u0002\u0255\u0257\u0005',
  '.\u0018\u0002\u0256\u0258\u0005D#\u0002\u0257\u0256\u0003\u0002\u0002',
  '\u0002\u0257\u0258\u0003\u0002\u0002\u0002\u0258{\u0003\u0002\u0002',
  '\u0002\u0259\u025a\u0007\u0018\u0002\u0002\u025a\u025b\u0007!\u0002',
  '\u0002\u025b\u025d\u0005\u008eH\u0002\u025c\u025e\u0005D#\u0002\u025d',
  '\u025c\u0003\u0002\u0002\u0002\u025d\u025e\u0003\u0002\u0002\u0002\u025e',
  '\u025f\u0003\u0002\u0002\u0002\u025f\u0260\u0005x=\u0002\u0260\u0267',
  '\u0003\u0002\u0002\u0002\u0261\u0262\u0007\u0018\u0002\u0002\u0262\u0263',
  '\u0007!\u0002\u0002\u0263\u0264\u0005\u008eH\u0002\u0264\u0265\u0005',
  'D#\u0002\u0265\u0267\u0003\u0002\u0002\u0002\u0266\u0259\u0003\u0002',
  '\u0002\u0002\u0266\u0261\u0003\u0002\u0002\u0002\u0267}\u0003\u0002',
  '\u0002\u0002\u0268\u026a\u0005T+\u0002\u0269\u0268\u0003\u0002\u0002',
  '\u0002\u0269\u026a\u0003\u0002\u0002\u0002\u026a\u026b\u0003\u0002\u0002',
  '\u0002\u026b\u026c\u0007"\u0002\u0002\u026c\u026e\u0005\u008eH\u0002',
  '\u026d\u026f\u0005D#\u0002\u026e\u026d\u0003\u0002\u0002\u0002\u026e',
  '\u026f\u0003\u0002\u0002\u0002\u026f\u0271\u0003\u0002\u0002\u0002\u0270',
  '\u0272\u0005\u0080A\u0002\u0271\u0270\u0003\u0002\u0002\u0002\u0271',
  '\u0272\u0003\u0002\u0002\u0002\u0272\u007f\u0003\u0002\u0002\u0002\u0273',
  '\u0275\u0007\u0006\u0002\u0002\u0274\u0276\u0005h5\u0002\u0275\u0274',
  '\u0003\u0002\u0002\u0002\u0276\u0277\u0003\u0002\u0002\u0002\u0277\u0275',
  '\u0003\u0002\u0002\u0002\u0277\u0278\u0003\u0002\u0002\u0002\u0278\u0279',
  '\u0003\u0002\u0002\u0002\u0279\u027a\u0007\u0007\u0002\u0002\u027a\u0081',
  '\u0003\u0002\u0002\u0002\u027b\u027c\u0007\u0018\u0002\u0002\u027c\u027d',
  '\u0007"\u0002\u0002\u027d\u027f\u0005\u008eH\u0002\u027e\u0280\u0005',
  'D#\u0002\u027f\u027e\u0003\u0002\u0002\u0002\u027f\u0280\u0003\u0002',
  '\u0002\u0002\u0280\u0281\u0003\u0002\u0002\u0002\u0281\u0282\u0005\u0080',
  'A\u0002\u0282\u0289\u0003\u0002\u0002\u0002\u0283\u0284\u0007\u0018',
  '\u0002\u0002\u0284\u0285\u0007"\u0002\u0002\u0285\u0286\u0005\u008e',
  'H\u0002\u0286\u0287\u0005D#\u0002\u0287\u0289\u0003\u0002\u0002\u0002',
  '\u0288\u027b\u0003\u0002\u0002\u0002\u0288\u0283\u0003\u0002\u0002\u0002',
  '\u0289\u0083\u0003\u0002\u0002\u0002\u028a\u028c\u0005T+\u0002\u028b',
  '\u028a\u0003\u0002\u0002\u0002\u028b\u028c\u0003\u0002\u0002\u0002\u028c',
  '\u028d\u0003\u0002\u0002\u0002\u028d\u028e\u0007#\u0002\u0002\u028e',
  '\u028f\u0007\u0016\u0002\u0002\u028f\u0291\u0005\u008eH\u0002\u0290',
  '\u0292\u0005f4\u0002\u0291\u0290\u0003\u0002\u0002\u0002\u0291\u0292',
  '\u0003\u0002\u0002\u0002\u0292\u0293\u0003\u0002\u0002\u0002\u0293\u0294',
  '\u0007\r\u0002\u0002\u0294\u0295\u0005\u0086D\u0002\u0295\u0085\u0003',
  '\u0002\u0002\u0002\u0296\u029b\u0005\u0088E\u0002\u0297\u0298\u0007',
  ' \u0002\u0002\u0298\u029a\u0005\u0088E\u0002\u0299\u0297\u0003\u0002',
  '\u0002\u0002\u029a\u029d\u0003\u0002\u0002\u0002\u029b\u0299\u0003\u0002',
  '\u0002\u0002\u029b\u029c\u0003\u0002\u0002\u0002\u029c\u0087\u0003\u0002',
  '\u0002\u0002\u029d\u029b\u0003\u0002\u0002\u0002\u029e\u02a1\u0005\u008a',
  'F\u0002\u029f\u02a1\u0005\u008cG\u0002\u02a0\u029e\u0003\u0002\u0002',
  '\u0002\u02a0\u029f\u0003\u0002\u0002\u0002\u02a1\u0089\u0003\u0002\u0002',
  '\u0002\u02a2\u02a3\t\u0005\u0002\u0002\u02a3\u008b\u0003\u0002\u0002',
  '\u0002\u02a4\u02a5\t\u0006\u0002\u0002\u02a5\u008d\u0003\u0002\u0002',
  '\u0002\u02a6\u02a7\u00076\u0002\u0002\u02a7\u008f\u0003\u0002\u0002',
  '\u0002Z\u0093\u0098\u009c\u00a0\u00a3\u00a6\u00ab\u00b3\u00ba\u00bd',
  '\u00c1\u00c4\u00c7\u00cd\u00db\u00e2\u00ed\u00f0\u00fd\u0111\u0115\u011b',
  '\u012b\u0133\u013a\u013e\u0140\u014b\u0150\u0155\u0159\u015d\u0163\u016e',
  '\u0174\u017b\u0189\u0191\u0194\u0199\u01a1\u01a6\u01a9\u01ac\u01b1\u01ba',
  '\u01c1\u01c6\u01ca\u01cf\u01d5\u01da\u01e0\u01e3\u01e9\u01ec\u01f4\u01fd',
  '\u0200\u0205\u0208\u020e\u0217\u021a\u021f\u0222\u0226\u022d\u0234\u023d',
  '\u0240\u0245\u0248\u024e\u0253\u0257\u025d\u0266\u0269\u026e\u0271\u0277',
  '\u027f\u0288\u028b\u0291\u029b\u02a0'
].join('');

var atn = new antlr4.atn.ATNDeserializer().deserialize(serializedATN);

var decisionsToDFA = atn.decisionToState.map(function(ds, index) {
  return new antlr4.dfa.DFA(ds, index);
});

var sharedContextCache = new antlr4.PredictionContextCache();

var literalNames = [
  null,
  "'query'",
  "'mutation'",
  "'subscription'",
  "'{'",
  "'}'",
  "'('",
  "')'",
  "':'",
  "'...'",
  "'fragment'",
  "'on'",
  "'true'",
  "'false'",
  "'null'",
  "'['",
  "']'",
  "'$'",
  "'='",
  "'!'",
  "'@'",
  "'schema'",
  "'extend'",
  "'scalar'",
  "'extends'",
  "'type'",
  "'implements'",
  "'&'",
  "'interface'",
  "'union'",
  "'|'",
  "'enum'",
  "'input'",
  "'directive'",
  "'QUERY'",
  "'MUTATION'",
  "'SUBSCRIPTION'",
  "'FIELD'",
  "'FRAGMENT_DEFINITION'",
  "'FRAGMENT_SPREAD'",
  "'INLINE_FRAGMENT'",
  "'SCHEMA'",
  "'SCALAR'",
  "'OBJECT'",
  "'FIELD_DEFINITION'",
  "'ARGUMENT_DEFINITION'",
  "'INTERFACE'",
  "'UNION'",
  "'ENUM'",
  "'ENUM_VALUE'",
  "'INPUT_OBJECT'",
  "'INPUT_FIELD_DEFINITION'",
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  "','",
  null,
  null,
  "'\uEFBBBF'",
  "'\uFEFF'",
  "'\u0000FEFF'"
];

var symbolicNames = [
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  null,
  'NAME',
  'STRING',
  'BLOCK_STRING',
  'ID',
  'FLOAT',
  'INT',
  'PUNCTUATOR',
  'WS',
  'COMMA',
  'LineComment',
  'UNICODE_BOM',
  'UTF8_BOM',
  'UTF16_BOM',
  'UTF32_BOM'
];

var ruleNames = [
  'document',
  'definition',
  'executableDefinition',
  'operationDefinition',
  'operationType',
  'selectionSet',
  'selection',
  'field',
  'arguments',
  'argument',
  'alias',
  'fragmentSpread',
  'fragmentDefinition',
  'fragmentName',
  'typeCondition',
  'inlineFragment',
  'value',
  'intValue',
  'floatValue',
  'booleanValue',
  'stringValue',
  'nullValue',
  'enumValue',
  'listValue',
  'objectValue',
  'objectField',
  'variable',
  'variableDefinitions',
  'variableDefinition',
  'defaultValue',
  'type_',
  'namedType',
  'listType',
  'directives',
  'directive',
  'typeSystemDefinition',
  'typeSystemExtension',
  'schemaDefinition',
  'rootOperationTypeDefinition',
  'schemaExtension',
  'operationTypeDefinition',
  'description',
  'typeDefinition',
  'typeExtension',
  'scalarTypeDefinition',
  'scalarTypeExtension',
  'objectTypeDefinition',
  'implementsInterfaces',
  'fieldsDefinition',
  'fieldDefinition',
  'argumentsDefinition',
  'inputValueDefinition',
  'objectTypeExtension',
  'interfaceTypeDefinition',
  'interfaceTypeExtension',
  'unionTypeDefinition',
  'unionMemberTypes',
  'unionTypeExtension',
  'enumTypeDefinition',
  'enumValuesDefinition',
  'enumValueDefinition',
  'enumTypeExtension',
  'inputObjectTypeDefinition',
  'inputFieldsDefinition',
  'inputObjectTypeExtension',
  'directiveDefinition',
  'directiveLocations',
  'directiveLocation',
  'executableDirectiveLocation',
  'typeSystemDirectiveLocation',
  'name'
];

function GraphQLParser(input) {
  antlr4.Parser.call(this, input);
  this._interp = new antlr4.atn.ParserATNSimulator(this, atn, decisionsToDFA, sharedContextCache);
  this.ruleNames = ruleNames;
  this.literalNames = literalNames;
  this.symbolicNames = symbolicNames;
  return this;
}

GraphQLParser.prototype = Object.create(antlr4.Parser.prototype);
GraphQLParser.prototype.constructor = GraphQLParser;

Object.defineProperty(GraphQLParser.prototype, 'atn', {
  get: function() {
    return atn;
  }
});

GraphQLParser.EOF = antlr4.Token.EOF;
GraphQLParser.T__0 = 1;
GraphQLParser.T__1 = 2;
GraphQLParser.T__2 = 3;
GraphQLParser.T__3 = 4;
GraphQLParser.T__4 = 5;
GraphQLParser.T__5 = 6;
GraphQLParser.T__6 = 7;
GraphQLParser.T__7 = 8;
GraphQLParser.T__8 = 9;
GraphQLParser.T__9 = 10;
GraphQLParser.T__10 = 11;
GraphQLParser.T__11 = 12;
GraphQLParser.T__12 = 13;
GraphQLParser.T__13 = 14;
GraphQLParser.T__14 = 15;
GraphQLParser.T__15 = 16;
GraphQLParser.T__16 = 17;
GraphQLParser.T__17 = 18;
GraphQLParser.T__18 = 19;
GraphQLParser.T__19 = 20;
GraphQLParser.T__20 = 21;
GraphQLParser.T__21 = 22;
GraphQLParser.T__22 = 23;
GraphQLParser.T__23 = 24;
GraphQLParser.T__24 = 25;
GraphQLParser.T__25 = 26;
GraphQLParser.T__26 = 27;
GraphQLParser.T__27 = 28;
GraphQLParser.T__28 = 29;
GraphQLParser.T__29 = 30;
GraphQLParser.T__30 = 31;
GraphQLParser.T__31 = 32;
GraphQLParser.T__32 = 33;
GraphQLParser.T__33 = 34;
GraphQLParser.T__34 = 35;
GraphQLParser.T__35 = 36;
GraphQLParser.T__36 = 37;
GraphQLParser.T__37 = 38;
GraphQLParser.T__38 = 39;
GraphQLParser.T__39 = 40;
GraphQLParser.T__40 = 41;
GraphQLParser.T__41 = 42;
GraphQLParser.T__42 = 43;
GraphQLParser.T__43 = 44;
GraphQLParser.T__44 = 45;
GraphQLParser.T__45 = 46;
GraphQLParser.T__46 = 47;
GraphQLParser.T__47 = 48;
GraphQLParser.T__48 = 49;
GraphQLParser.T__49 = 50;
GraphQLParser.T__50 = 51;
GraphQLParser.NAME = 52;
GraphQLParser.STRING = 53;
GraphQLParser.BLOCK_STRING = 54;
GraphQLParser.ID = 55;
GraphQLParser.FLOAT = 56;
GraphQLParser.INT = 57;
GraphQLParser.PUNCTUATOR = 58;
GraphQLParser.WS = 59;
GraphQLParser.COMMA = 60;
GraphQLParser.LineComment = 61;
GraphQLParser.UNICODE_BOM = 62;
GraphQLParser.UTF8_BOM = 63;
GraphQLParser.UTF16_BOM = 64;
GraphQLParser.UTF32_BOM = 65;

GraphQLParser.RULE_document = 0;
GraphQLParser.RULE_definition = 1;
GraphQLParser.RULE_executableDefinition = 2;
GraphQLParser.RULE_operationDefinition = 3;
GraphQLParser.RULE_operationType = 4;
GraphQLParser.RULE_selectionSet = 5;
GraphQLParser.RULE_selection = 6;
GraphQLParser.RULE_field = 7;
GraphQLParser.RULE_arguments = 8;
GraphQLParser.RULE_argument = 9;
GraphQLParser.RULE_alias = 10;
GraphQLParser.RULE_fragmentSpread = 11;
GraphQLParser.RULE_fragmentDefinition = 12;
GraphQLParser.RULE_fragmentName = 13;
GraphQLParser.RULE_typeCondition = 14;
GraphQLParser.RULE_inlineFragment = 15;
GraphQLParser.RULE_value = 16;
GraphQLParser.RULE_intValue = 17;
GraphQLParser.RULE_floatValue = 18;
GraphQLParser.RULE_booleanValue = 19;
GraphQLParser.RULE_stringValue = 20;
GraphQLParser.RULE_nullValue = 21;
GraphQLParser.RULE_enumValue = 22;
GraphQLParser.RULE_listValue = 23;
GraphQLParser.RULE_objectValue = 24;
GraphQLParser.RULE_objectField = 25;
GraphQLParser.RULE_variable = 26;
GraphQLParser.RULE_variableDefinitions = 27;
GraphQLParser.RULE_variableDefinition = 28;
GraphQLParser.RULE_defaultValue = 29;
GraphQLParser.RULE_type_ = 30;
GraphQLParser.RULE_namedType = 31;
GraphQLParser.RULE_listType = 32;
GraphQLParser.RULE_directives = 33;
GraphQLParser.RULE_directive = 34;
GraphQLParser.RULE_typeSystemDefinition = 35;
GraphQLParser.RULE_typeSystemExtension = 36;
GraphQLParser.RULE_schemaDefinition = 37;
GraphQLParser.RULE_rootOperationTypeDefinition = 38;
GraphQLParser.RULE_schemaExtension = 39;
GraphQLParser.RULE_operationTypeDefinition = 40;
GraphQLParser.RULE_description = 41;
GraphQLParser.RULE_typeDefinition = 42;
GraphQLParser.RULE_typeExtension = 43;
GraphQLParser.RULE_scalarTypeDefinition = 44;
GraphQLParser.RULE_scalarTypeExtension = 45;
GraphQLParser.RULE_objectTypeDefinition = 46;
GraphQLParser.RULE_implementsInterfaces = 47;
GraphQLParser.RULE_fieldsDefinition = 48;
GraphQLParser.RULE_fieldDefinition = 49;
GraphQLParser.RULE_argumentsDefinition = 50;
GraphQLParser.RULE_inputValueDefinition = 51;
GraphQLParser.RULE_objectTypeExtension = 52;
GraphQLParser.RULE_interfaceTypeDefinition = 53;
GraphQLParser.RULE_interfaceTypeExtension = 54;
GraphQLParser.RULE_unionTypeDefinition = 55;
GraphQLParser.RULE_unionMemberTypes = 56;
GraphQLParser.RULE_unionTypeExtension = 57;
GraphQLParser.RULE_enumTypeDefinition = 58;
GraphQLParser.RULE_enumValuesDefinition = 59;
GraphQLParser.RULE_enumValueDefinition = 60;
GraphQLParser.RULE_enumTypeExtension = 61;
GraphQLParser.RULE_inputObjectTypeDefinition = 62;
GraphQLParser.RULE_inputFieldsDefinition = 63;
GraphQLParser.RULE_inputObjectTypeExtension = 64;
GraphQLParser.RULE_directiveDefinition = 65;
GraphQLParser.RULE_directiveLocations = 66;
GraphQLParser.RULE_directiveLocation = 67;
GraphQLParser.RULE_executableDirectiveLocation = 68;
GraphQLParser.RULE_typeSystemDirectiveLocation = 69;
GraphQLParser.RULE_name = 70;

function DocumentContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_document;
  return this;
}

DocumentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DocumentContext.prototype.constructor = DocumentContext;

DocumentContext.prototype.definition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(DefinitionContext);
  } else {
    return this.getTypedRuleContext(DefinitionContext, i);
  }
};

DocumentContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDocument(this);
  }
};

DocumentContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDocument(this);
  }
};

DocumentContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDocument(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DocumentContext = DocumentContext;

GraphQLParser.prototype.document = function() {
  var localctx = new DocumentContext(this, this._ctx, this.state);
  this.enterRule(localctx, 0, GraphQLParser.RULE_document);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 143;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 142;
      this.definition();
      this.state = 145;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(
      ((_la & ~0x1f) == 0 &&
        ((1 << _la) & ((1 << GraphQLParser.T__0) | (1 << GraphQLParser.T__1) | (1 << GraphQLParser.T__2) | (1 << GraphQLParser.T__3) | (1 << GraphQLParser.T__9) | (1 << GraphQLParser.T__20) | (1 << GraphQLParser.T__21) | (1 << GraphQLParser.T__22) | (1 << GraphQLParser.T__23) | (1 << GraphQLParser.T__24) | (1 << GraphQLParser.T__27) | (1 << GraphQLParser.T__28) | (1 << GraphQLParser.T__30))) !==
          0) ||
      (((_la - 32) & ~0x1f) == 0 && ((1 << (_la - 32)) & ((1 << (GraphQLParser.T__31 - 32)) | (1 << (GraphQLParser.T__32 - 32)) | (1 << (GraphQLParser.STRING - 32)) | (1 << (GraphQLParser.BLOCK_STRING - 32)))) !== 0)
    );
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_definition;
  return this;
}

DefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DefinitionContext.prototype.constructor = DefinitionContext;

DefinitionContext.prototype.executableDefinition = function() {
  return this.getTypedRuleContext(ExecutableDefinitionContext, 0);
};

DefinitionContext.prototype.typeSystemDefinition = function() {
  return this.getTypedRuleContext(TypeSystemDefinitionContext, 0);
};

DefinitionContext.prototype.typeSystemExtension = function() {
  return this.getTypedRuleContext(TypeSystemExtensionContext, 0);
};

DefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDefinition(this);
  }
};

DefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDefinition(this);
  }
};

DefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DefinitionContext = DefinitionContext;

GraphQLParser.prototype.definition = function() {
  var localctx = new DefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 2, GraphQLParser.RULE_definition);
  try {
    this.state = 150;
    this._errHandler.sync(this);
    switch (this._input.LA(1)) {
      case GraphQLParser.T__0:
      case GraphQLParser.T__1:
      case GraphQLParser.T__2:
      case GraphQLParser.T__3:
      case GraphQLParser.T__9:
        this.enterOuterAlt(localctx, 1);
        this.state = 147;
        this.executableDefinition();
        break;
      case GraphQLParser.T__20:
      case GraphQLParser.T__22:
      case GraphQLParser.T__24:
      case GraphQLParser.T__27:
      case GraphQLParser.T__28:
      case GraphQLParser.T__30:
      case GraphQLParser.T__31:
      case GraphQLParser.T__32:
      case GraphQLParser.STRING:
      case GraphQLParser.BLOCK_STRING:
        this.enterOuterAlt(localctx, 2);
        this.state = 148;
        this.typeSystemDefinition();
        break;
      case GraphQLParser.T__21:
      case GraphQLParser.T__23:
        this.enterOuterAlt(localctx, 3);
        this.state = 149;
        this.typeSystemExtension();
        break;
      default:
        throw new antlr4.error.NoViableAltException(this);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ExecutableDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_executableDefinition;
  return this;
}

ExecutableDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExecutableDefinitionContext.prototype.constructor = ExecutableDefinitionContext;

ExecutableDefinitionContext.prototype.operationDefinition = function() {
  return this.getTypedRuleContext(OperationDefinitionContext, 0);
};

ExecutableDefinitionContext.prototype.fragmentDefinition = function() {
  return this.getTypedRuleContext(FragmentDefinitionContext, 0);
};

ExecutableDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterExecutableDefinition(this);
  }
};

ExecutableDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitExecutableDefinition(this);
  }
};

ExecutableDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitExecutableDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ExecutableDefinitionContext = ExecutableDefinitionContext;

GraphQLParser.prototype.executableDefinition = function() {
  var localctx = new ExecutableDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 4, GraphQLParser.RULE_executableDefinition);
  try {
    this.state = 154;
    this._errHandler.sync(this);
    switch (this._input.LA(1)) {
      case GraphQLParser.T__0:
      case GraphQLParser.T__1:
      case GraphQLParser.T__2:
      case GraphQLParser.T__3:
        this.enterOuterAlt(localctx, 1);
        this.state = 152;
        this.operationDefinition();
        break;
      case GraphQLParser.T__9:
        this.enterOuterAlt(localctx, 2);
        this.state = 153;
        this.fragmentDefinition();
        break;
      default:
        throw new antlr4.error.NoViableAltException(this);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function OperationDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_operationDefinition;
  return this;
}

OperationDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OperationDefinitionContext.prototype.constructor = OperationDefinitionContext;

OperationDefinitionContext.prototype.operationType = function() {
  return this.getTypedRuleContext(OperationTypeContext, 0);
};

OperationDefinitionContext.prototype.selectionSet = function() {
  return this.getTypedRuleContext(SelectionSetContext, 0);
};

OperationDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

OperationDefinitionContext.prototype.variableDefinitions = function() {
  return this.getTypedRuleContext(VariableDefinitionsContext, 0);
};

OperationDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

OperationDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterOperationDefinition(this);
  }
};

OperationDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitOperationDefinition(this);
  }
};

OperationDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitOperationDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.OperationDefinitionContext = OperationDefinitionContext;

GraphQLParser.prototype.operationDefinition = function() {
  var localctx = new OperationDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 6, GraphQLParser.RULE_operationDefinition);
  var _la = 0; // Token type
  try {
    this.state = 169;
    this._errHandler.sync(this);
    switch (this._input.LA(1)) {
      case GraphQLParser.T__0:
      case GraphQLParser.T__1:
      case GraphQLParser.T__2:
        this.enterOuterAlt(localctx, 1);
        this.state = 156;
        this.operationType();
        this.state = 158;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.NAME) {
          this.state = 157;
          this.name();
        }

        this.state = 161;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__5) {
          this.state = 160;
          this.variableDefinitions();
        }

        this.state = 164;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__19) {
          this.state = 163;
          this.directives();
        }

        this.state = 166;
        this.selectionSet();
        break;
      case GraphQLParser.T__3:
        this.enterOuterAlt(localctx, 2);
        this.state = 168;
        this.selectionSet();
        break;
      default:
        throw new antlr4.error.NoViableAltException(this);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function OperationTypeContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_operationType;
  return this;
}

OperationTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OperationTypeContext.prototype.constructor = OperationTypeContext;

OperationTypeContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterOperationType(this);
  }
};

OperationTypeContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitOperationType(this);
  }
};

OperationTypeContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitOperationType(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.OperationTypeContext = OperationTypeContext;

GraphQLParser.prototype.operationType = function() {
  var localctx = new OperationTypeContext(this, this._ctx, this.state);
  this.enterRule(localctx, 8, GraphQLParser.RULE_operationType);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 171;
    _la = this._input.LA(1);
    if(!((_la & ~0x1f) == 0 && ((1 << _la) & ((1 << GraphQLParser.T__0) | (1 << GraphQLParser.T__1) | (1 << GraphQLParser.T__2))) !== 0)) {
      this._errHandler.recoverInline(this);
    } else {
      this._errHandler.reportMatch(this);
      this.consume();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function SelectionSetContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_selectionSet;
  return this;
}

SelectionSetContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectionSetContext.prototype.constructor = SelectionSetContext;

SelectionSetContext.prototype.selection = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(SelectionContext);
  } else {
    return this.getTypedRuleContext(SelectionContext, i);
  }
};

SelectionSetContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterSelectionSet(this);
  }
};

SelectionSetContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitSelectionSet(this);
  }
};

SelectionSetContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitSelectionSet(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.SelectionSetContext = SelectionSetContext;

GraphQLParser.prototype.selectionSet = function() {
  var localctx = new SelectionSetContext(this, this._ctx, this.state);
  this.enterRule(localctx, 10, GraphQLParser.RULE_selectionSet);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 173;
    this.match(GraphQLParser.T__3);
    this.state = 175;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 174;
      this.selection();
      this.state = 177;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(_la === GraphQLParser.T__8 || _la === GraphQLParser.NAME);
    this.state = 179;
    this.match(GraphQLParser.T__4);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function SelectionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_selection;
  return this;
}

SelectionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SelectionContext.prototype.constructor = SelectionContext;

SelectionContext.prototype.field = function() {
  return this.getTypedRuleContext(FieldContext, 0);
};

SelectionContext.prototype.fragmentSpread = function() {
  return this.getTypedRuleContext(FragmentSpreadContext, 0);
};

SelectionContext.prototype.inlineFragment = function() {
  return this.getTypedRuleContext(InlineFragmentContext, 0);
};

SelectionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterSelection(this);
  }
};

SelectionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitSelection(this);
  }
};

SelectionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitSelection(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.SelectionContext = SelectionContext;

GraphQLParser.prototype.selection = function() {
  var localctx = new SelectionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 12, GraphQLParser.RULE_selection);
  try {
    this.state = 184;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 8, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 181;
        this.field();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 182;
        this.fragmentSpread();
        break;

      case 3:
        this.enterOuterAlt(localctx, 3);
        this.state = 183;
        this.inlineFragment();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function FieldContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_field;
  return this;
}

FieldContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FieldContext.prototype.constructor = FieldContext;

FieldContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

FieldContext.prototype.alias = function() {
  return this.getTypedRuleContext(AliasContext, 0);
};

FieldContext.prototype.arguments = function() {
  return this.getTypedRuleContext(ArgumentsContext, 0);
};

FieldContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

FieldContext.prototype.selectionSet = function() {
  return this.getTypedRuleContext(SelectionSetContext, 0);
};

FieldContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterField(this);
  }
};

FieldContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitField(this);
  }
};

FieldContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitField(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.FieldContext = FieldContext;

GraphQLParser.prototype.field = function() {
  var localctx = new FieldContext(this, this._ctx, this.state);
  this.enterRule(localctx, 14, GraphQLParser.RULE_field);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 187;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 9, this._ctx);
    if(la_ === 1) {
      this.state = 186;
      this.alias();
    }
    this.state = 189;
    this.name();
    this.state = 191;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__5) {
      this.state = 190;
      this.arguments();
    }

    this.state = 194;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 193;
      this.directives();
    }

    this.state = 197;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__3) {
      this.state = 196;
      this.selectionSet();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ArgumentsContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_arguments;
  return this;
}

ArgumentsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgumentsContext.prototype.constructor = ArgumentsContext;

ArgumentsContext.prototype.argument = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(ArgumentContext);
  } else {
    return this.getTypedRuleContext(ArgumentContext, i);
  }
};

ArgumentsContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterArguments(this);
  }
};

ArgumentsContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitArguments(this);
  }
};

ArgumentsContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitArguments(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ArgumentsContext = ArgumentsContext;

GraphQLParser.prototype.arguments = function() {
  var localctx = new ArgumentsContext(this, this._ctx, this.state);
  this.enterRule(localctx, 16, GraphQLParser.RULE_arguments);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 199;
    this.match(GraphQLParser.T__5);
    this.state = 201;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 200;
      this.argument();
      this.state = 203;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(_la === GraphQLParser.NAME);
    this.state = 205;
    this.match(GraphQLParser.T__6);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ArgumentContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_argument;
  return this;
}

ArgumentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgumentContext.prototype.constructor = ArgumentContext;

ArgumentContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

ArgumentContext.prototype.value = function() {
  return this.getTypedRuleContext(ValueContext, 0);
};

ArgumentContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterArgument(this);
  }
};

ArgumentContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitArgument(this);
  }
};

ArgumentContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitArgument(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ArgumentContext = ArgumentContext;

GraphQLParser.prototype.argument = function() {
  var localctx = new ArgumentContext(this, this._ctx, this.state);
  this.enterRule(localctx, 18, GraphQLParser.RULE_argument);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 207;
    this.name();
    this.state = 208;
    this.match(GraphQLParser.T__7);
    this.state = 209;
    this.value();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function AliasContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_alias;
  return this;
}

AliasContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
AliasContext.prototype.constructor = AliasContext;

AliasContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

AliasContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterAlias(this);
  }
};

AliasContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitAlias(this);
  }
};

AliasContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitAlias(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.AliasContext = AliasContext;

GraphQLParser.prototype.alias = function() {
  var localctx = new AliasContext(this, this._ctx, this.state);
  this.enterRule(localctx, 20, GraphQLParser.RULE_alias);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 211;
    this.name();
    this.state = 212;
    this.match(GraphQLParser.T__7);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function FragmentSpreadContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_fragmentSpread;
  return this;
}

FragmentSpreadContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FragmentSpreadContext.prototype.constructor = FragmentSpreadContext;

FragmentSpreadContext.prototype.fragmentName = function() {
  return this.getTypedRuleContext(FragmentNameContext, 0);
};

FragmentSpreadContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

FragmentSpreadContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterFragmentSpread(this);
  }
};

FragmentSpreadContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitFragmentSpread(this);
  }
};

FragmentSpreadContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitFragmentSpread(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.FragmentSpreadContext = FragmentSpreadContext;

GraphQLParser.prototype.fragmentSpread = function() {
  var localctx = new FragmentSpreadContext(this, this._ctx, this.state);
  this.enterRule(localctx, 22, GraphQLParser.RULE_fragmentSpread);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 214;
    this.match(GraphQLParser.T__8);
    this.state = 215;
    this.fragmentName();
    this.state = 217;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 216;
      this.directives();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function FragmentDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_fragmentDefinition;
  return this;
}

FragmentDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FragmentDefinitionContext.prototype.constructor = FragmentDefinitionContext;

FragmentDefinitionContext.prototype.fragmentName = function() {
  return this.getTypedRuleContext(FragmentNameContext, 0);
};

FragmentDefinitionContext.prototype.typeCondition = function() {
  return this.getTypedRuleContext(TypeConditionContext, 0);
};

FragmentDefinitionContext.prototype.selectionSet = function() {
  return this.getTypedRuleContext(SelectionSetContext, 0);
};

FragmentDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

FragmentDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterFragmentDefinition(this);
  }
};

FragmentDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitFragmentDefinition(this);
  }
};

FragmentDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitFragmentDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.FragmentDefinitionContext = FragmentDefinitionContext;

GraphQLParser.prototype.fragmentDefinition = function() {
  var localctx = new FragmentDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 24, GraphQLParser.RULE_fragmentDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 219;
    this.match(GraphQLParser.T__9);
    this.state = 220;
    this.fragmentName();
    this.state = 221;
    this.match(GraphQLParser.T__10);
    this.state = 222;
    this.typeCondition();
    this.state = 224;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 223;
      this.directives();
    }

    this.state = 226;
    this.selectionSet();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function FragmentNameContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_fragmentName;
  return this;
}

FragmentNameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FragmentNameContext.prototype.constructor = FragmentNameContext;

FragmentNameContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

FragmentNameContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterFragmentName(this);
  }
};

FragmentNameContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitFragmentName(this);
  }
};

FragmentNameContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitFragmentName(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.FragmentNameContext = FragmentNameContext;

GraphQLParser.prototype.fragmentName = function() {
  var localctx = new FragmentNameContext(this, this._ctx, this.state);
  this.enterRule(localctx, 26, GraphQLParser.RULE_fragmentName);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 228;
    this.name();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function TypeConditionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_typeCondition;
  return this;
}

TypeConditionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeConditionContext.prototype.constructor = TypeConditionContext;

TypeConditionContext.prototype.namedType = function() {
  return this.getTypedRuleContext(NamedTypeContext, 0);
};

TypeConditionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterTypeCondition(this);
  }
};

TypeConditionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitTypeCondition(this);
  }
};

TypeConditionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitTypeCondition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.TypeConditionContext = TypeConditionContext;

GraphQLParser.prototype.typeCondition = function() {
  var localctx = new TypeConditionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 28, GraphQLParser.RULE_typeCondition);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 230;
    this.match(GraphQLParser.T__10);
    this.state = 231;
    this.namedType();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function InlineFragmentContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_inlineFragment;
  return this;
}

InlineFragmentContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InlineFragmentContext.prototype.constructor = InlineFragmentContext;

InlineFragmentContext.prototype.selectionSet = function() {
  return this.getTypedRuleContext(SelectionSetContext, 0);
};

InlineFragmentContext.prototype.typeCondition = function() {
  return this.getTypedRuleContext(TypeConditionContext, 0);
};

InlineFragmentContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

InlineFragmentContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterInlineFragment(this);
  }
};

InlineFragmentContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitInlineFragment(this);
  }
};

InlineFragmentContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitInlineFragment(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.InlineFragmentContext = InlineFragmentContext;

GraphQLParser.prototype.inlineFragment = function() {
  var localctx = new InlineFragmentContext(this, this._ctx, this.state);
  this.enterRule(localctx, 30, GraphQLParser.RULE_inlineFragment);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 233;
    this.match(GraphQLParser.T__8);
    this.state = 235;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__10) {
      this.state = 234;
      this.typeCondition();
    }

    this.state = 238;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 237;
      this.directives();
    }

    this.state = 240;
    this.selectionSet();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_value;
  return this;
}

ValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ValueContext.prototype.constructor = ValueContext;

ValueContext.prototype.variable = function() {
  return this.getTypedRuleContext(VariableContext, 0);
};

ValueContext.prototype.intValue = function() {
  return this.getTypedRuleContext(IntValueContext, 0);
};

ValueContext.prototype.floatValue = function() {
  return this.getTypedRuleContext(FloatValueContext, 0);
};

ValueContext.prototype.stringValue = function() {
  return this.getTypedRuleContext(StringValueContext, 0);
};

ValueContext.prototype.booleanValue = function() {
  return this.getTypedRuleContext(BooleanValueContext, 0);
};

ValueContext.prototype.nullValue = function() {
  return this.getTypedRuleContext(NullValueContext, 0);
};

ValueContext.prototype.enumValue = function() {
  return this.getTypedRuleContext(EnumValueContext, 0);
};

ValueContext.prototype.listValue = function() {
  return this.getTypedRuleContext(ListValueContext, 0);
};

ValueContext.prototype.objectValue = function() {
  return this.getTypedRuleContext(ObjectValueContext, 0);
};

ValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterValue(this);
  }
};

ValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitValue(this);
  }
};

ValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ValueContext = ValueContext;

GraphQLParser.prototype.value = function() {
  var localctx = new ValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 32, GraphQLParser.RULE_value);
  try {
    this.state = 251;
    this._errHandler.sync(this);
    switch (this._input.LA(1)) {
      case GraphQLParser.T__16:
        this.enterOuterAlt(localctx, 1);
        this.state = 242;
        this.variable();
        break;
      case GraphQLParser.INT:
        this.enterOuterAlt(localctx, 2);
        this.state = 243;
        this.intValue();
        break;
      case GraphQLParser.FLOAT:
        this.enterOuterAlt(localctx, 3);
        this.state = 244;
        this.floatValue();
        break;
      case GraphQLParser.STRING:
      case GraphQLParser.BLOCK_STRING:
        this.enterOuterAlt(localctx, 4);
        this.state = 245;
        this.stringValue();
        break;
      case GraphQLParser.T__11:
      case GraphQLParser.T__12:
        this.enterOuterAlt(localctx, 5);
        this.state = 246;
        this.booleanValue();
        break;
      case GraphQLParser.T__13:
        this.enterOuterAlt(localctx, 6);
        this.state = 247;
        this.nullValue();
        break;
      case GraphQLParser.NAME:
        this.enterOuterAlt(localctx, 7);
        this.state = 248;
        this.enumValue();
        break;
      case GraphQLParser.T__14:
        this.enterOuterAlt(localctx, 8);
        this.state = 249;
        this.listValue();
        break;
      case GraphQLParser.T__3:
        this.enterOuterAlt(localctx, 9);
        this.state = 250;
        this.objectValue();
        break;
      default:
        throw new antlr4.error.NoViableAltException(this);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function IntValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_intValue;
  return this;
}

IntValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
IntValueContext.prototype.constructor = IntValueContext;

IntValueContext.prototype.INT = function() {
  return this.getToken(GraphQLParser.INT, 0);
};

IntValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterIntValue(this);
  }
};

IntValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitIntValue(this);
  }
};

IntValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitIntValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.IntValueContext = IntValueContext;

GraphQLParser.prototype.intValue = function() {
  var localctx = new IntValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 34, GraphQLParser.RULE_intValue);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 253;
    this.match(GraphQLParser.INT);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function FloatValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_floatValue;
  return this;
}

FloatValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FloatValueContext.prototype.constructor = FloatValueContext;

FloatValueContext.prototype.FLOAT = function() {
  return this.getToken(GraphQLParser.FLOAT, 0);
};

FloatValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterFloatValue(this);
  }
};

FloatValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitFloatValue(this);
  }
};

FloatValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitFloatValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.FloatValueContext = FloatValueContext;

GraphQLParser.prototype.floatValue = function() {
  var localctx = new FloatValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 36, GraphQLParser.RULE_floatValue);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 255;
    this.match(GraphQLParser.FLOAT);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function BooleanValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_booleanValue;
  return this;
}

BooleanValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
BooleanValueContext.prototype.constructor = BooleanValueContext;

BooleanValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterBooleanValue(this);
  }
};

BooleanValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitBooleanValue(this);
  }
};

BooleanValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitBooleanValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.BooleanValueContext = BooleanValueContext;

GraphQLParser.prototype.booleanValue = function() {
  var localctx = new BooleanValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 38, GraphQLParser.RULE_booleanValue);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 257;
    _la = this._input.LA(1);
    if(!(_la === GraphQLParser.T__11 || _la === GraphQLParser.T__12)) {
      this._errHandler.recoverInline(this);
    } else {
      this._errHandler.reportMatch(this);
      this.consume();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function StringValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_stringValue;
  return this;
}

StringValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
StringValueContext.prototype.constructor = StringValueContext;

StringValueContext.prototype.STRING = function() {
  return this.getToken(GraphQLParser.STRING, 0);
};

StringValueContext.prototype.BLOCK_STRING = function() {
  return this.getToken(GraphQLParser.BLOCK_STRING, 0);
};

StringValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterStringValue(this);
  }
};

StringValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitStringValue(this);
  }
};

StringValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitStringValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.StringValueContext = StringValueContext;

GraphQLParser.prototype.stringValue = function() {
  var localctx = new StringValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 40, GraphQLParser.RULE_stringValue);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 259;
    _la = this._input.LA(1);
    if(!(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING)) {
      this._errHandler.recoverInline(this);
    } else {
      this._errHandler.reportMatch(this);
      this.consume();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function NullValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_nullValue;
  return this;
}

NullValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NullValueContext.prototype.constructor = NullValueContext;

NullValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterNullValue(this);
  }
};

NullValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitNullValue(this);
  }
};

NullValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitNullValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.NullValueContext = NullValueContext;

GraphQLParser.prototype.nullValue = function() {
  var localctx = new NullValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 42, GraphQLParser.RULE_nullValue);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 261;
    this.match(GraphQLParser.T__13);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function EnumValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_enumValue;
  return this;
}

EnumValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumValueContext.prototype.constructor = EnumValueContext;

EnumValueContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

EnumValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterEnumValue(this);
  }
};

EnumValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitEnumValue(this);
  }
};

EnumValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitEnumValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.EnumValueContext = EnumValueContext;

GraphQLParser.prototype.enumValue = function() {
  var localctx = new EnumValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 44, GraphQLParser.RULE_enumValue);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 263;
    this.name();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ListValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_listValue;
  return this;
}

ListValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ListValueContext.prototype.constructor = ListValueContext;

ListValueContext.prototype.value = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(ValueContext);
  } else {
    return this.getTypedRuleContext(ValueContext, i);
  }
};

ListValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterListValue(this);
  }
};

ListValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitListValue(this);
  }
};

ListValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitListValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ListValueContext = ListValueContext;

GraphQLParser.prototype.listValue = function() {
  var localctx = new ListValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 46, GraphQLParser.RULE_listValue);
  var _la = 0; // Token type
  try {
    this.state = 275;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 20, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 265;
        this.match(GraphQLParser.T__14);
        this.state = 266;
        this.match(GraphQLParser.T__15);
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 267;
        this.match(GraphQLParser.T__14);
        this.state = 269;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
          this.state = 268;
          this.value();
          this.state = 271;
          this._errHandler.sync(this);
          _la = this._input.LA(1);
        } while(
          ((_la & ~0x1f) == 0 && ((1 << _la) & ((1 << GraphQLParser.T__3) | (1 << GraphQLParser.T__11) | (1 << GraphQLParser.T__12) | (1 << GraphQLParser.T__13) | (1 << GraphQLParser.T__14) | (1 << GraphQLParser.T__16))) !== 0) ||
          (((_la - 52) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (GraphQLParser.NAME - 52)) | (1 << (GraphQLParser.STRING - 52)) | (1 << (GraphQLParser.BLOCK_STRING - 52)) | (1 << (GraphQLParser.FLOAT - 52)) | (1 << (GraphQLParser.INT - 52)))) !== 0)
        );
        this.state = 273;
        this.match(GraphQLParser.T__15);
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ObjectValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_objectValue;
  return this;
}

ObjectValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ObjectValueContext.prototype.constructor = ObjectValueContext;

ObjectValueContext.prototype.objectField = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(ObjectFieldContext);
  } else {
    return this.getTypedRuleContext(ObjectFieldContext, i);
  }
};

ObjectValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterObjectValue(this);
  }
};

ObjectValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitObjectValue(this);
  }
};

ObjectValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitObjectValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ObjectValueContext = ObjectValueContext;

GraphQLParser.prototype.objectValue = function() {
  var localctx = new ObjectValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 48, GraphQLParser.RULE_objectValue);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 277;
    this.match(GraphQLParser.T__3);
    this.state = 281;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    while(_la === GraphQLParser.NAME) {
      this.state = 278;
      this.objectField();
      this.state = 283;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    }
    this.state = 284;
    this.match(GraphQLParser.T__4);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ObjectFieldContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_objectField;
  return this;
}

ObjectFieldContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ObjectFieldContext.prototype.constructor = ObjectFieldContext;

ObjectFieldContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

ObjectFieldContext.prototype.value = function() {
  return this.getTypedRuleContext(ValueContext, 0);
};

ObjectFieldContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterObjectField(this);
  }
};

ObjectFieldContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitObjectField(this);
  }
};

ObjectFieldContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitObjectField(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ObjectFieldContext = ObjectFieldContext;

GraphQLParser.prototype.objectField = function() {
  var localctx = new ObjectFieldContext(this, this._ctx, this.state);
  this.enterRule(localctx, 50, GraphQLParser.RULE_objectField);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 286;
    this.name();
    this.state = 287;
    this.match(GraphQLParser.T__7);
    this.state = 288;
    this.value();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function VariableContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_variable;
  return this;
}

VariableContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableContext.prototype.constructor = VariableContext;

VariableContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

VariableContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterVariable(this);
  }
};

VariableContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitVariable(this);
  }
};

VariableContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitVariable(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.VariableContext = VariableContext;

GraphQLParser.prototype.variable = function() {
  var localctx = new VariableContext(this, this._ctx, this.state);
  this.enterRule(localctx, 52, GraphQLParser.RULE_variable);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 290;
    this.match(GraphQLParser.T__16);
    this.state = 291;
    this.name();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function VariableDefinitionsContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_variableDefinitions;
  return this;
}

VariableDefinitionsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableDefinitionsContext.prototype.constructor = VariableDefinitionsContext;

VariableDefinitionsContext.prototype.variableDefinition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(VariableDefinitionContext);
  } else {
    return this.getTypedRuleContext(VariableDefinitionContext, i);
  }
};

VariableDefinitionsContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterVariableDefinitions(this);
  }
};

VariableDefinitionsContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitVariableDefinitions(this);
  }
};

VariableDefinitionsContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitVariableDefinitions(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.VariableDefinitionsContext = VariableDefinitionsContext;

GraphQLParser.prototype.variableDefinitions = function() {
  var localctx = new VariableDefinitionsContext(this, this._ctx, this.state);
  this.enterRule(localctx, 54, GraphQLParser.RULE_variableDefinitions);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 293;
    this.match(GraphQLParser.T__5);
    this.state = 295;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 294;
      this.variableDefinition();
      this.state = 297;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(_la === GraphQLParser.T__16);
    this.state = 299;
    this.match(GraphQLParser.T__6);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function VariableDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_variableDefinition;
  return this;
}

VariableDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
VariableDefinitionContext.prototype.constructor = VariableDefinitionContext;

VariableDefinitionContext.prototype.variable = function() {
  return this.getTypedRuleContext(VariableContext, 0);
};

VariableDefinitionContext.prototype.type_ = function() {
  return this.getTypedRuleContext(Type_Context, 0);
};

VariableDefinitionContext.prototype.defaultValue = function() {
  return this.getTypedRuleContext(DefaultValueContext, 0);
};

VariableDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterVariableDefinition(this);
  }
};

VariableDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitVariableDefinition(this);
  }
};

VariableDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitVariableDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.VariableDefinitionContext = VariableDefinitionContext;

GraphQLParser.prototype.variableDefinition = function() {
  var localctx = new VariableDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 56, GraphQLParser.RULE_variableDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 301;
    this.variable();
    this.state = 302;
    this.match(GraphQLParser.T__7);
    this.state = 303;
    this.type_();
    this.state = 305;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__17) {
      this.state = 304;
      this.defaultValue();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DefaultValueContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_defaultValue;
  return this;
}

DefaultValueContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DefaultValueContext.prototype.constructor = DefaultValueContext;

DefaultValueContext.prototype.value = function() {
  return this.getTypedRuleContext(ValueContext, 0);
};

DefaultValueContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDefaultValue(this);
  }
};

DefaultValueContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDefaultValue(this);
  }
};

DefaultValueContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDefaultValue(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DefaultValueContext = DefaultValueContext;

GraphQLParser.prototype.defaultValue = function() {
  var localctx = new DefaultValueContext(this, this._ctx, this.state);
  this.enterRule(localctx, 58, GraphQLParser.RULE_defaultValue);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 307;
    this.match(GraphQLParser.T__17);
    this.state = 308;
    this.value();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function Type_Context(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_type_;
  return this;
}

Type_Context.prototype = Object.create(antlr4.ParserRuleContext.prototype);
Type_Context.prototype.constructor = Type_Context;

Type_Context.prototype.namedType = function() {
  return this.getTypedRuleContext(NamedTypeContext, 0);
};

Type_Context.prototype.listType = function() {
  return this.getTypedRuleContext(ListTypeContext, 0);
};

Type_Context.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterType_(this);
  }
};

Type_Context.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitType_(this);
  }
};

Type_Context.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitType_(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.Type_Context = Type_Context;

GraphQLParser.prototype.type_ = function() {
  var localctx = new Type_Context(this, this._ctx, this.state);
  this.enterRule(localctx, 60, GraphQLParser.RULE_type_);
  var _la = 0; // Token type
  try {
    this.state = 318;
    this._errHandler.sync(this);
    switch (this._input.LA(1)) {
      case GraphQLParser.NAME:
        this.enterOuterAlt(localctx, 1);
        this.state = 310;
        this.namedType();
        this.state = 312;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__18) {
          this.state = 311;
          this.match(GraphQLParser.T__18);
        }

        break;
      case GraphQLParser.T__14:
        this.enterOuterAlt(localctx, 2);
        this.state = 314;
        this.listType();
        this.state = 316;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__18) {
          this.state = 315;
          this.match(GraphQLParser.T__18);
        }

        break;
      default:
        throw new antlr4.error.NoViableAltException(this);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function NamedTypeContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_namedType;
  return this;
}

NamedTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NamedTypeContext.prototype.constructor = NamedTypeContext;

NamedTypeContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

NamedTypeContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterNamedType(this);
  }
};

NamedTypeContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitNamedType(this);
  }
};

NamedTypeContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitNamedType(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.NamedTypeContext = NamedTypeContext;

GraphQLParser.prototype.namedType = function() {
  var localctx = new NamedTypeContext(this, this._ctx, this.state);
  this.enterRule(localctx, 62, GraphQLParser.RULE_namedType);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 320;
    this.name();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ListTypeContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_listType;
  return this;
}

ListTypeContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ListTypeContext.prototype.constructor = ListTypeContext;

ListTypeContext.prototype.type_ = function() {
  return this.getTypedRuleContext(Type_Context, 0);
};

ListTypeContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterListType(this);
  }
};

ListTypeContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitListType(this);
  }
};

ListTypeContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitListType(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ListTypeContext = ListTypeContext;

GraphQLParser.prototype.listType = function() {
  var localctx = new ListTypeContext(this, this._ctx, this.state);
  this.enterRule(localctx, 64, GraphQLParser.RULE_listType);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 322;
    this.match(GraphQLParser.T__14);
    this.state = 323;
    this.type_();
    this.state = 324;
    this.match(GraphQLParser.T__15);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DirectivesContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_directives;
  return this;
}

DirectivesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DirectivesContext.prototype.constructor = DirectivesContext;

DirectivesContext.prototype.directive = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(DirectiveContext);
  } else {
    return this.getTypedRuleContext(DirectiveContext, i);
  }
};

DirectivesContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDirectives(this);
  }
};

DirectivesContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDirectives(this);
  }
};

DirectivesContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDirectives(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DirectivesContext = DirectivesContext;

GraphQLParser.prototype.directives = function() {
  var localctx = new DirectivesContext(this, this._ctx, this.state);
  this.enterRule(localctx, 66, GraphQLParser.RULE_directives);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 327;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 326;
      this.directive();
      this.state = 329;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(_la === GraphQLParser.T__19);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DirectiveContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_directive;
  return this;
}

DirectiveContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DirectiveContext.prototype.constructor = DirectiveContext;

DirectiveContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

DirectiveContext.prototype.arguments = function() {
  return this.getTypedRuleContext(ArgumentsContext, 0);
};

DirectiveContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDirective(this);
  }
};

DirectiveContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDirective(this);
  }
};

DirectiveContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDirective(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DirectiveContext = DirectiveContext;

GraphQLParser.prototype.directive = function() {
  var localctx = new DirectiveContext(this, this._ctx, this.state);
  this.enterRule(localctx, 68, GraphQLParser.RULE_directive);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 331;
    this.match(GraphQLParser.T__19);
    this.state = 332;
    this.name();
    this.state = 334;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__5) {
      this.state = 333;
      this.arguments();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function TypeSystemDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_typeSystemDefinition;
  return this;
}

TypeSystemDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeSystemDefinitionContext.prototype.constructor = TypeSystemDefinitionContext;

TypeSystemDefinitionContext.prototype.schemaDefinition = function() {
  return this.getTypedRuleContext(SchemaDefinitionContext, 0);
};

TypeSystemDefinitionContext.prototype.typeDefinition = function() {
  return this.getTypedRuleContext(TypeDefinitionContext, 0);
};

TypeSystemDefinitionContext.prototype.directiveDefinition = function() {
  return this.getTypedRuleContext(DirectiveDefinitionContext, 0);
};

TypeSystemDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterTypeSystemDefinition(this);
  }
};

TypeSystemDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitTypeSystemDefinition(this);
  }
};

TypeSystemDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitTypeSystemDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.TypeSystemDefinitionContext = TypeSystemDefinitionContext;

GraphQLParser.prototype.typeSystemDefinition = function() {
  var localctx = new TypeSystemDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 70, GraphQLParser.RULE_typeSystemDefinition);
  try {
    this.state = 339;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 29, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 336;
        this.schemaDefinition();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 337;
        this.typeDefinition();
        break;

      case 3:
        this.enterOuterAlt(localctx, 3);
        this.state = 338;
        this.directiveDefinition();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function TypeSystemExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_typeSystemExtension;
  return this;
}

TypeSystemExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeSystemExtensionContext.prototype.constructor = TypeSystemExtensionContext;

TypeSystemExtensionContext.prototype.schemaExtension = function() {
  return this.getTypedRuleContext(SchemaExtensionContext, 0);
};

TypeSystemExtensionContext.prototype.typeExtension = function() {
  return this.getTypedRuleContext(TypeExtensionContext, 0);
};

TypeSystemExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterTypeSystemExtension(this);
  }
};

TypeSystemExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitTypeSystemExtension(this);
  }
};

TypeSystemExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitTypeSystemExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.TypeSystemExtensionContext = TypeSystemExtensionContext;

GraphQLParser.prototype.typeSystemExtension = function() {
  var localctx = new TypeSystemExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 72, GraphQLParser.RULE_typeSystemExtension);
  try {
    this.state = 343;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 30, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 341;
        this.schemaExtension();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 342;
        this.typeExtension();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function SchemaDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_schemaDefinition;
  return this;
}

SchemaDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SchemaDefinitionContext.prototype.constructor = SchemaDefinitionContext;

SchemaDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

SchemaDefinitionContext.prototype.rootOperationTypeDefinition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(RootOperationTypeDefinitionContext);
  } else {
    return this.getTypedRuleContext(RootOperationTypeDefinitionContext, i);
  }
};

SchemaDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterSchemaDefinition(this);
  }
};

SchemaDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitSchemaDefinition(this);
  }
};

SchemaDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitSchemaDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.SchemaDefinitionContext = SchemaDefinitionContext;

GraphQLParser.prototype.schemaDefinition = function() {
  var localctx = new SchemaDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 74, GraphQLParser.RULE_schemaDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 345;
    this.match(GraphQLParser.T__20);
    this.state = 347;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 346;
      this.directives();
    }

    this.state = 349;
    this.match(GraphQLParser.T__3);
    this.state = 351;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 350;
      this.rootOperationTypeDefinition();
      this.state = 353;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while((_la & ~0x1f) == 0 && ((1 << _la) & ((1 << GraphQLParser.T__0) | (1 << GraphQLParser.T__1) | (1 << GraphQLParser.T__2))) !== 0);
    this.state = 355;
    this.match(GraphQLParser.T__4);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function RootOperationTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_rootOperationTypeDefinition;
  return this;
}

RootOperationTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
RootOperationTypeDefinitionContext.prototype.constructor = RootOperationTypeDefinitionContext;

RootOperationTypeDefinitionContext.prototype.operationType = function() {
  return this.getTypedRuleContext(OperationTypeContext, 0);
};

RootOperationTypeDefinitionContext.prototype.namedType = function() {
  return this.getTypedRuleContext(NamedTypeContext, 0);
};

RootOperationTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterRootOperationTypeDefinition(this);
  }
};

RootOperationTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitRootOperationTypeDefinition(this);
  }
};

RootOperationTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitRootOperationTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.RootOperationTypeDefinitionContext = RootOperationTypeDefinitionContext;

GraphQLParser.prototype.rootOperationTypeDefinition = function() {
  var localctx = new RootOperationTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 76, GraphQLParser.RULE_rootOperationTypeDefinition);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 357;
    this.operationType();
    this.state = 358;
    this.match(GraphQLParser.T__7);
    this.state = 359;
    this.namedType();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function SchemaExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_schemaExtension;
  return this;
}

SchemaExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
SchemaExtensionContext.prototype.constructor = SchemaExtensionContext;

SchemaExtensionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

SchemaExtensionContext.prototype.operationTypeDefinition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(OperationTypeDefinitionContext);
  } else {
    return this.getTypedRuleContext(OperationTypeDefinitionContext, i);
  }
};

SchemaExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterSchemaExtension(this);
  }
};

SchemaExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitSchemaExtension(this);
  }
};

SchemaExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitSchemaExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.SchemaExtensionContext = SchemaExtensionContext;

GraphQLParser.prototype.schemaExtension = function() {
  var localctx = new SchemaExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 78, GraphQLParser.RULE_schemaExtension);
  var _la = 0; // Token type
  try {
    this.state = 377;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 35, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 361;
        this.match(GraphQLParser.T__21);
        this.state = 362;
        this.match(GraphQLParser.T__20);
        this.state = 364;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__19) {
          this.state = 363;
          this.directives();
        }

        this.state = 366;
        this.match(GraphQLParser.T__3);
        this.state = 368;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        do {
          this.state = 367;
          this.operationTypeDefinition();
          this.state = 370;
          this._errHandler.sync(this);
          _la = this._input.LA(1);
        } while((_la & ~0x1f) == 0 && ((1 << _la) & ((1 << GraphQLParser.T__0) | (1 << GraphQLParser.T__1) | (1 << GraphQLParser.T__2))) !== 0);
        this.state = 372;
        this.match(GraphQLParser.T__4);
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 374;
        this.match(GraphQLParser.T__21);
        this.state = 375;
        this.match(GraphQLParser.T__20);
        this.state = 376;
        this.directives();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function OperationTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_operationTypeDefinition;
  return this;
}

OperationTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
OperationTypeDefinitionContext.prototype.constructor = OperationTypeDefinitionContext;

OperationTypeDefinitionContext.prototype.operationType = function() {
  return this.getTypedRuleContext(OperationTypeContext, 0);
};

OperationTypeDefinitionContext.prototype.namedType = function() {
  return this.getTypedRuleContext(NamedTypeContext, 0);
};

OperationTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterOperationTypeDefinition(this);
  }
};

OperationTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitOperationTypeDefinition(this);
  }
};

OperationTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitOperationTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.OperationTypeDefinitionContext = OperationTypeDefinitionContext;

GraphQLParser.prototype.operationTypeDefinition = function() {
  var localctx = new OperationTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 80, GraphQLParser.RULE_operationTypeDefinition);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 379;
    this.operationType();
    this.state = 380;
    this.match(GraphQLParser.T__7);
    this.state = 381;
    this.namedType();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DescriptionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_description;
  return this;
}

DescriptionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DescriptionContext.prototype.constructor = DescriptionContext;

DescriptionContext.prototype.stringValue = function() {
  return this.getTypedRuleContext(StringValueContext, 0);
};

DescriptionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDescription(this);
  }
};

DescriptionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDescription(this);
  }
};

DescriptionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDescription(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DescriptionContext = DescriptionContext;

GraphQLParser.prototype.description = function() {
  var localctx = new DescriptionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 82, GraphQLParser.RULE_description);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 383;
    this.stringValue();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function TypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_typeDefinition;
  return this;
}

TypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeDefinitionContext.prototype.constructor = TypeDefinitionContext;

TypeDefinitionContext.prototype.scalarTypeDefinition = function() {
  return this.getTypedRuleContext(ScalarTypeDefinitionContext, 0);
};

TypeDefinitionContext.prototype.objectTypeDefinition = function() {
  return this.getTypedRuleContext(ObjectTypeDefinitionContext, 0);
};

TypeDefinitionContext.prototype.interfaceTypeDefinition = function() {
  return this.getTypedRuleContext(InterfaceTypeDefinitionContext, 0);
};

TypeDefinitionContext.prototype.unionTypeDefinition = function() {
  return this.getTypedRuleContext(UnionTypeDefinitionContext, 0);
};

TypeDefinitionContext.prototype.enumTypeDefinition = function() {
  return this.getTypedRuleContext(EnumTypeDefinitionContext, 0);
};

TypeDefinitionContext.prototype.inputObjectTypeDefinition = function() {
  return this.getTypedRuleContext(InputObjectTypeDefinitionContext, 0);
};

TypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterTypeDefinition(this);
  }
};

TypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitTypeDefinition(this);
  }
};

TypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.TypeDefinitionContext = TypeDefinitionContext;

GraphQLParser.prototype.typeDefinition = function() {
  var localctx = new TypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 84, GraphQLParser.RULE_typeDefinition);
  try {
    this.state = 391;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 36, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 385;
        this.scalarTypeDefinition();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 386;
        this.objectTypeDefinition();
        break;

      case 3:
        this.enterOuterAlt(localctx, 3);
        this.state = 387;
        this.interfaceTypeDefinition();
        break;

      case 4:
        this.enterOuterAlt(localctx, 4);
        this.state = 388;
        this.unionTypeDefinition();
        break;

      case 5:
        this.enterOuterAlt(localctx, 5);
        this.state = 389;
        this.enumTypeDefinition();
        break;

      case 6:
        this.enterOuterAlt(localctx, 6);
        this.state = 390;
        this.inputObjectTypeDefinition();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function TypeExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_typeExtension;
  return this;
}

TypeExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeExtensionContext.prototype.constructor = TypeExtensionContext;

TypeExtensionContext.prototype.scalarTypeExtension = function() {
  return this.getTypedRuleContext(ScalarTypeExtensionContext, 0);
};

TypeExtensionContext.prototype.objectTypeExtension = function() {
  return this.getTypedRuleContext(ObjectTypeExtensionContext, 0);
};

TypeExtensionContext.prototype.interfaceTypeExtension = function() {
  return this.getTypedRuleContext(InterfaceTypeExtensionContext, 0);
};

TypeExtensionContext.prototype.unionTypeExtension = function() {
  return this.getTypedRuleContext(UnionTypeExtensionContext, 0);
};

TypeExtensionContext.prototype.enumTypeExtension = function() {
  return this.getTypedRuleContext(EnumTypeExtensionContext, 0);
};

TypeExtensionContext.prototype.inputObjectTypeExtension = function() {
  return this.getTypedRuleContext(InputObjectTypeExtensionContext, 0);
};

TypeExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterTypeExtension(this);
  }
};

TypeExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitTypeExtension(this);
  }
};

TypeExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitTypeExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.TypeExtensionContext = TypeExtensionContext;

GraphQLParser.prototype.typeExtension = function() {
  var localctx = new TypeExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 86, GraphQLParser.RULE_typeExtension);
  try {
    this.state = 399;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 37, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 393;
        this.scalarTypeExtension();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 394;
        this.objectTypeExtension();
        break;

      case 3:
        this.enterOuterAlt(localctx, 3);
        this.state = 395;
        this.interfaceTypeExtension();
        break;

      case 4:
        this.enterOuterAlt(localctx, 4);
        this.state = 396;
        this.unionTypeExtension();
        break;

      case 5:
        this.enterOuterAlt(localctx, 5);
        this.state = 397;
        this.enumTypeExtension();
        break;

      case 6:
        this.enterOuterAlt(localctx, 6);
        this.state = 398;
        this.inputObjectTypeExtension();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ScalarTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_scalarTypeDefinition;
  return this;
}

ScalarTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ScalarTypeDefinitionContext.prototype.constructor = ScalarTypeDefinitionContext;

ScalarTypeDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

ScalarTypeDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

ScalarTypeDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

ScalarTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterScalarTypeDefinition(this);
  }
};

ScalarTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitScalarTypeDefinition(this);
  }
};

ScalarTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitScalarTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ScalarTypeDefinitionContext = ScalarTypeDefinitionContext;

GraphQLParser.prototype.scalarTypeDefinition = function() {
  var localctx = new ScalarTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 88, GraphQLParser.RULE_scalarTypeDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 402;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 401;
      this.description();
    }

    this.state = 404;
    this.match(GraphQLParser.T__22);
    this.state = 405;
    this.name();
    this.state = 407;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 406;
      this.directives();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ScalarTypeExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_scalarTypeExtension;
  return this;
}

ScalarTypeExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ScalarTypeExtensionContext.prototype.constructor = ScalarTypeExtensionContext;

ScalarTypeExtensionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

ScalarTypeExtensionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

ScalarTypeExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterScalarTypeExtension(this);
  }
};

ScalarTypeExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitScalarTypeExtension(this);
  }
};

ScalarTypeExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitScalarTypeExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ScalarTypeExtensionContext = ScalarTypeExtensionContext;

GraphQLParser.prototype.scalarTypeExtension = function() {
  var localctx = new ScalarTypeExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 90, GraphQLParser.RULE_scalarTypeExtension);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 409;
    this.match(GraphQLParser.T__23);
    this.state = 410;
    this.match(GraphQLParser.T__22);
    this.state = 411;
    this.name();
    this.state = 412;
    this.directives();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ObjectTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_objectTypeDefinition;
  return this;
}

ObjectTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ObjectTypeDefinitionContext.prototype.constructor = ObjectTypeDefinitionContext;

ObjectTypeDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

ObjectTypeDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

ObjectTypeDefinitionContext.prototype.implementsInterfaces = function() {
  return this.getTypedRuleContext(ImplementsInterfacesContext, 0);
};

ObjectTypeDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

ObjectTypeDefinitionContext.prototype.fieldsDefinition = function() {
  return this.getTypedRuleContext(FieldsDefinitionContext, 0);
};

ObjectTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterObjectTypeDefinition(this);
  }
};

ObjectTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitObjectTypeDefinition(this);
  }
};

ObjectTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitObjectTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ObjectTypeDefinitionContext = ObjectTypeDefinitionContext;

GraphQLParser.prototype.objectTypeDefinition = function() {
  var localctx = new ObjectTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 92, GraphQLParser.RULE_objectTypeDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 415;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 414;
      this.description();
    }

    this.state = 417;
    this.match(GraphQLParser.T__24);
    this.state = 418;
    this.name();
    this.state = 420;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__25) {
      this.state = 419;
      this.implementsInterfaces(0);
    }

    this.state = 423;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 422;
      this.directives();
    }

    this.state = 426;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 43, this._ctx);
    if(la_ === 1) {
      this.state = 425;
      this.fieldsDefinition();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ImplementsInterfacesContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_implementsInterfaces;
  return this;
}

ImplementsInterfacesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ImplementsInterfacesContext.prototype.constructor = ImplementsInterfacesContext;

ImplementsInterfacesContext.prototype.namedType = function() {
  return this.getTypedRuleContext(NamedTypeContext, 0);
};

ImplementsInterfacesContext.prototype.implementsInterfaces = function() {
  return this.getTypedRuleContext(ImplementsInterfacesContext, 0);
};

ImplementsInterfacesContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterImplementsInterfaces(this);
  }
};

ImplementsInterfacesContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitImplementsInterfaces(this);
  }
};

ImplementsInterfacesContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitImplementsInterfaces(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.prototype.implementsInterfaces = function(_p) {
  if(_p === undefined) {
    _p = 0;
  }
  var _parentctx = this._ctx;
  var _parentState = this.state;
  var localctx = new ImplementsInterfacesContext(this, this._ctx, _parentState);
  var _prevctx = localctx;
  var _startState = 94;
  this.enterRecursionRule(localctx, 94, GraphQLParser.RULE_implementsInterfaces, _p);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 429;
    this.match(GraphQLParser.T__25);
    this.state = 431;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__26) {
      this.state = 430;
      this.match(GraphQLParser.T__26);
    }

    this.state = 433;
    this.namedType();
    this._ctx.stop = this._input.LT(-1);
    this.state = 440;
    this._errHandler.sync(this);
    var _alt = this._interp.adaptivePredict(this._input, 45, this._ctx);
    while(_alt != 2 && _alt != antlr4.atn.ATN.INVALID_ALT_NUMBER) {
      if(_alt === 1) {
        if(this._parseListeners !== null) {
          this.triggerExitRuleEvent();
        }
        _prevctx = localctx;
        localctx = new ImplementsInterfacesContext(this, _parentctx, _parentState);
        this.pushNewRecursionContext(localctx, _startState, GraphQLParser.RULE_implementsInterfaces);
        this.state = 435;
        if(!this.precpred(this._ctx, 1)) {
          throw new antlr4.error.FailedPredicateException(this, 'this.precpred(this._ctx, 1)');
        }
        this.state = 436;
        this.match(GraphQLParser.T__26);
        this.state = 437;
        this.namedType();
      }
      this.state = 442;
      this._errHandler.sync(this);
      _alt = this._interp.adaptivePredict(this._input, 45, this._ctx);
    }
  } catch(error) {
    if(error instanceof antlr4.error.RecognitionException) {
      localctx.exception = error;
      this._errHandler.reportError(this, error);
      this._errHandler.recover(this, error);
    } else {
      throw error;
    }
  } finally {
    this.unrollRecursionContexts(_parentctx);
  }
  return localctx;
};

function FieldsDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_fieldsDefinition;
  return this;
}

FieldsDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FieldsDefinitionContext.prototype.constructor = FieldsDefinitionContext;

FieldsDefinitionContext.prototype.fieldDefinition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(FieldDefinitionContext);
  } else {
    return this.getTypedRuleContext(FieldDefinitionContext, i);
  }
};

FieldsDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterFieldsDefinition(this);
  }
};

FieldsDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitFieldsDefinition(this);
  }
};

FieldsDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitFieldsDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.FieldsDefinitionContext = FieldsDefinitionContext;

GraphQLParser.prototype.fieldsDefinition = function() {
  var localctx = new FieldsDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 96, GraphQLParser.RULE_fieldsDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 443;
    this.match(GraphQLParser.T__3);
    this.state = 445;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 444;
      this.fieldDefinition();
      this.state = 447;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(((_la - 52) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (GraphQLParser.NAME - 52)) | (1 << (GraphQLParser.STRING - 52)) | (1 << (GraphQLParser.BLOCK_STRING - 52)))) !== 0);
    this.state = 449;
    this.match(GraphQLParser.T__4);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function FieldDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_fieldDefinition;
  return this;
}

FieldDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
FieldDefinitionContext.prototype.constructor = FieldDefinitionContext;

FieldDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

FieldDefinitionContext.prototype.type_ = function() {
  return this.getTypedRuleContext(Type_Context, 0);
};

FieldDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

FieldDefinitionContext.prototype.argumentsDefinition = function() {
  return this.getTypedRuleContext(ArgumentsDefinitionContext, 0);
};

FieldDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

FieldDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterFieldDefinition(this);
  }
};

FieldDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitFieldDefinition(this);
  }
};

FieldDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitFieldDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.FieldDefinitionContext = FieldDefinitionContext;

GraphQLParser.prototype.fieldDefinition = function() {
  var localctx = new FieldDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 98, GraphQLParser.RULE_fieldDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 452;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 451;
      this.description();
    }

    this.state = 454;
    this.name();
    this.state = 456;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__5) {
      this.state = 455;
      this.argumentsDefinition();
    }

    this.state = 458;
    this.match(GraphQLParser.T__7);
    this.state = 459;
    this.type_();
    this.state = 461;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 460;
      this.directives();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ArgumentsDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_argumentsDefinition;
  return this;
}

ArgumentsDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ArgumentsDefinitionContext.prototype.constructor = ArgumentsDefinitionContext;

ArgumentsDefinitionContext.prototype.inputValueDefinition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(InputValueDefinitionContext);
  } else {
    return this.getTypedRuleContext(InputValueDefinitionContext, i);
  }
};

ArgumentsDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterArgumentsDefinition(this);
  }
};

ArgumentsDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitArgumentsDefinition(this);
  }
};

ArgumentsDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitArgumentsDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ArgumentsDefinitionContext = ArgumentsDefinitionContext;

GraphQLParser.prototype.argumentsDefinition = function() {
  var localctx = new ArgumentsDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 100, GraphQLParser.RULE_argumentsDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 463;
    this.match(GraphQLParser.T__5);
    this.state = 465;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 464;
      this.inputValueDefinition();
      this.state = 467;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(((_la - 52) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (GraphQLParser.NAME - 52)) | (1 << (GraphQLParser.STRING - 52)) | (1 << (GraphQLParser.BLOCK_STRING - 52)))) !== 0);
    this.state = 469;
    this.match(GraphQLParser.T__6);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function InputValueDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_inputValueDefinition;
  return this;
}

InputValueDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InputValueDefinitionContext.prototype.constructor = InputValueDefinitionContext;

InputValueDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

InputValueDefinitionContext.prototype.type_ = function() {
  return this.getTypedRuleContext(Type_Context, 0);
};

InputValueDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

InputValueDefinitionContext.prototype.defaultValue = function() {
  return this.getTypedRuleContext(DefaultValueContext, 0);
};

InputValueDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

InputValueDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterInputValueDefinition(this);
  }
};

InputValueDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitInputValueDefinition(this);
  }
};

InputValueDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitInputValueDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.InputValueDefinitionContext = InputValueDefinitionContext;

GraphQLParser.prototype.inputValueDefinition = function() {
  var localctx = new InputValueDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 102, GraphQLParser.RULE_inputValueDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 472;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 471;
      this.description();
    }

    this.state = 474;
    this.name();
    this.state = 475;
    this.match(GraphQLParser.T__7);
    this.state = 476;
    this.type_();
    this.state = 478;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__17) {
      this.state = 477;
      this.defaultValue();
    }

    this.state = 481;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 480;
      this.directives();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ObjectTypeExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_objectTypeExtension;
  return this;
}

ObjectTypeExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ObjectTypeExtensionContext.prototype.constructor = ObjectTypeExtensionContext;

ObjectTypeExtensionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

ObjectTypeExtensionContext.prototype.fieldsDefinition = function() {
  return this.getTypedRuleContext(FieldsDefinitionContext, 0);
};

ObjectTypeExtensionContext.prototype.implementsInterfaces = function() {
  return this.getTypedRuleContext(ImplementsInterfacesContext, 0);
};

ObjectTypeExtensionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

ObjectTypeExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterObjectTypeExtension(this);
  }
};

ObjectTypeExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitObjectTypeExtension(this);
  }
};

ObjectTypeExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitObjectTypeExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ObjectTypeExtensionContext = ObjectTypeExtensionContext;

GraphQLParser.prototype.objectTypeExtension = function() {
  var localctx = new ObjectTypeExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 104, GraphQLParser.RULE_objectTypeExtension);
  var _la = 0; // Token type
  try {
    this.state = 507;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 57, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 483;
        this.match(GraphQLParser.T__21);
        this.state = 484;
        this.match(GraphQLParser.T__24);
        this.state = 485;
        this.name();
        this.state = 487;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__25) {
          this.state = 486;
          this.implementsInterfaces(0);
        }

        this.state = 490;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__19) {
          this.state = 489;
          this.directives();
        }

        this.state = 492;
        this.fieldsDefinition();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 494;
        this.match(GraphQLParser.T__21);
        this.state = 495;
        this.match(GraphQLParser.T__24);
        this.state = 496;
        this.name();
        this.state = 498;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__25) {
          this.state = 497;
          this.implementsInterfaces(0);
        }

        this.state = 500;
        this.directives();
        break;

      case 3:
        this.enterOuterAlt(localctx, 3);
        this.state = 502;
        this.match(GraphQLParser.T__21);
        this.state = 503;
        this.match(GraphQLParser.T__24);
        this.state = 504;
        this.name();
        this.state = 505;
        this.implementsInterfaces(0);
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function InterfaceTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_interfaceTypeDefinition;
  return this;
}

InterfaceTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceTypeDefinitionContext.prototype.constructor = InterfaceTypeDefinitionContext;

InterfaceTypeDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

InterfaceTypeDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

InterfaceTypeDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

InterfaceTypeDefinitionContext.prototype.fieldsDefinition = function() {
  return this.getTypedRuleContext(FieldsDefinitionContext, 0);
};

InterfaceTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterInterfaceTypeDefinition(this);
  }
};

InterfaceTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitInterfaceTypeDefinition(this);
  }
};

InterfaceTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitInterfaceTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.InterfaceTypeDefinitionContext = InterfaceTypeDefinitionContext;

GraphQLParser.prototype.interfaceTypeDefinition = function() {
  var localctx = new InterfaceTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 106, GraphQLParser.RULE_interfaceTypeDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 510;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 509;
      this.description();
    }

    this.state = 512;
    this.match(GraphQLParser.T__27);
    this.state = 513;
    this.name();
    this.state = 515;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 514;
      this.directives();
    }

    this.state = 518;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 60, this._ctx);
    if(la_ === 1) {
      this.state = 517;
      this.fieldsDefinition();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function InterfaceTypeExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_interfaceTypeExtension;
  return this;
}

InterfaceTypeExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InterfaceTypeExtensionContext.prototype.constructor = InterfaceTypeExtensionContext;

InterfaceTypeExtensionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

InterfaceTypeExtensionContext.prototype.fieldsDefinition = function() {
  return this.getTypedRuleContext(FieldsDefinitionContext, 0);
};

InterfaceTypeExtensionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

InterfaceTypeExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterInterfaceTypeExtension(this);
  }
};

InterfaceTypeExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitInterfaceTypeExtension(this);
  }
};

InterfaceTypeExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitInterfaceTypeExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.InterfaceTypeExtensionContext = InterfaceTypeExtensionContext;

GraphQLParser.prototype.interfaceTypeExtension = function() {
  var localctx = new InterfaceTypeExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 108, GraphQLParser.RULE_interfaceTypeExtension);
  var _la = 0; // Token type
  try {
    this.state = 533;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 62, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 520;
        this.match(GraphQLParser.T__21);
        this.state = 521;
        this.match(GraphQLParser.T__27);
        this.state = 522;
        this.name();
        this.state = 524;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__19) {
          this.state = 523;
          this.directives();
        }

        this.state = 526;
        this.fieldsDefinition();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 528;
        this.match(GraphQLParser.T__21);
        this.state = 529;
        this.match(GraphQLParser.T__27);
        this.state = 530;
        this.name();
        this.state = 531;
        this.directives();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function UnionTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_unionTypeDefinition;
  return this;
}

UnionTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnionTypeDefinitionContext.prototype.constructor = UnionTypeDefinitionContext;

UnionTypeDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

UnionTypeDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

UnionTypeDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

UnionTypeDefinitionContext.prototype.unionMemberTypes = function() {
  return this.getTypedRuleContext(UnionMemberTypesContext, 0);
};

UnionTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterUnionTypeDefinition(this);
  }
};

UnionTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitUnionTypeDefinition(this);
  }
};

UnionTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitUnionTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.UnionTypeDefinitionContext = UnionTypeDefinitionContext;

GraphQLParser.prototype.unionTypeDefinition = function() {
  var localctx = new UnionTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 110, GraphQLParser.RULE_unionTypeDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 536;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 535;
      this.description();
    }

    this.state = 538;
    this.match(GraphQLParser.T__28);
    this.state = 539;
    this.name();
    this.state = 541;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 540;
      this.directives();
    }

    this.state = 544;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__17) {
      this.state = 543;
      this.unionMemberTypes();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function UnionMemberTypesContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_unionMemberTypes;
  return this;
}

UnionMemberTypesContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnionMemberTypesContext.prototype.constructor = UnionMemberTypesContext;

UnionMemberTypesContext.prototype.namedType = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(NamedTypeContext);
  } else {
    return this.getTypedRuleContext(NamedTypeContext, i);
  }
};

UnionMemberTypesContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterUnionMemberTypes(this);
  }
};

UnionMemberTypesContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitUnionMemberTypes(this);
  }
};

UnionMemberTypesContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitUnionMemberTypes(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.UnionMemberTypesContext = UnionMemberTypesContext;

GraphQLParser.prototype.unionMemberTypes = function() {
  var localctx = new UnionMemberTypesContext(this, this._ctx, this.state);
  this.enterRule(localctx, 112, GraphQLParser.RULE_unionMemberTypes);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 546;
    this.match(GraphQLParser.T__17);
    this.state = 548;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__29) {
      this.state = 547;
      this.match(GraphQLParser.T__29);
    }

    this.state = 550;
    this.namedType();
    this.state = 555;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    while(_la === GraphQLParser.T__29) {
      this.state = 551;
      this.match(GraphQLParser.T__29);
      this.state = 552;
      this.namedType();
      this.state = 557;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function UnionTypeExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_unionTypeExtension;
  return this;
}

UnionTypeExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
UnionTypeExtensionContext.prototype.constructor = UnionTypeExtensionContext;

UnionTypeExtensionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

UnionTypeExtensionContext.prototype.unionMemberTypes = function() {
  return this.getTypedRuleContext(UnionMemberTypesContext, 0);
};

UnionTypeExtensionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

UnionTypeExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterUnionTypeExtension(this);
  }
};

UnionTypeExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitUnionTypeExtension(this);
  }
};

UnionTypeExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitUnionTypeExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.UnionTypeExtensionContext = UnionTypeExtensionContext;

GraphQLParser.prototype.unionTypeExtension = function() {
  var localctx = new UnionTypeExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 114, GraphQLParser.RULE_unionTypeExtension);
  var _la = 0; // Token type
  try {
    this.state = 571;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 69, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 558;
        this.match(GraphQLParser.T__21);
        this.state = 559;
        this.match(GraphQLParser.T__28);
        this.state = 560;
        this.name();
        this.state = 562;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__19) {
          this.state = 561;
          this.directives();
        }

        this.state = 564;
        this.unionMemberTypes();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 566;
        this.match(GraphQLParser.T__21);
        this.state = 567;
        this.match(GraphQLParser.T__28);
        this.state = 568;
        this.name();
        this.state = 569;
        this.directives();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function EnumTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_enumTypeDefinition;
  return this;
}

EnumTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumTypeDefinitionContext.prototype.constructor = EnumTypeDefinitionContext;

EnumTypeDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

EnumTypeDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

EnumTypeDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

EnumTypeDefinitionContext.prototype.enumValuesDefinition = function() {
  return this.getTypedRuleContext(EnumValuesDefinitionContext, 0);
};

EnumTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterEnumTypeDefinition(this);
  }
};

EnumTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitEnumTypeDefinition(this);
  }
};

EnumTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitEnumTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.EnumTypeDefinitionContext = EnumTypeDefinitionContext;

GraphQLParser.prototype.enumTypeDefinition = function() {
  var localctx = new EnumTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 116, GraphQLParser.RULE_enumTypeDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 574;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 573;
      this.description();
    }

    this.state = 576;
    this.match(GraphQLParser.T__30);
    this.state = 577;
    this.name();
    this.state = 579;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 578;
      this.directives();
    }

    this.state = 582;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 72, this._ctx);
    if(la_ === 1) {
      this.state = 581;
      this.enumValuesDefinition();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function EnumValuesDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_enumValuesDefinition;
  return this;
}

EnumValuesDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumValuesDefinitionContext.prototype.constructor = EnumValuesDefinitionContext;

EnumValuesDefinitionContext.prototype.enumValueDefinition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(EnumValueDefinitionContext);
  } else {
    return this.getTypedRuleContext(EnumValueDefinitionContext, i);
  }
};

EnumValuesDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterEnumValuesDefinition(this);
  }
};

EnumValuesDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitEnumValuesDefinition(this);
  }
};

EnumValuesDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitEnumValuesDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.EnumValuesDefinitionContext = EnumValuesDefinitionContext;

GraphQLParser.prototype.enumValuesDefinition = function() {
  var localctx = new EnumValuesDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 118, GraphQLParser.RULE_enumValuesDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 584;
    this.match(GraphQLParser.T__3);
    this.state = 586;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 585;
      this.enumValueDefinition();
      this.state = 588;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(((_la - 52) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (GraphQLParser.NAME - 52)) | (1 << (GraphQLParser.STRING - 52)) | (1 << (GraphQLParser.BLOCK_STRING - 52)))) !== 0);
    this.state = 590;
    this.match(GraphQLParser.T__4);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function EnumValueDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_enumValueDefinition;
  return this;
}

EnumValueDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumValueDefinitionContext.prototype.constructor = EnumValueDefinitionContext;

EnumValueDefinitionContext.prototype.enumValue = function() {
  return this.getTypedRuleContext(EnumValueContext, 0);
};

EnumValueDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

EnumValueDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

EnumValueDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterEnumValueDefinition(this);
  }
};

EnumValueDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitEnumValueDefinition(this);
  }
};

EnumValueDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitEnumValueDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.EnumValueDefinitionContext = EnumValueDefinitionContext;

GraphQLParser.prototype.enumValueDefinition = function() {
  var localctx = new EnumValueDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 120, GraphQLParser.RULE_enumValueDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 593;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 592;
      this.description();
    }

    this.state = 595;
    this.enumValue();
    this.state = 597;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 596;
      this.directives();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function EnumTypeExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_enumTypeExtension;
  return this;
}

EnumTypeExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
EnumTypeExtensionContext.prototype.constructor = EnumTypeExtensionContext;

EnumTypeExtensionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

EnumTypeExtensionContext.prototype.enumValuesDefinition = function() {
  return this.getTypedRuleContext(EnumValuesDefinitionContext, 0);
};

EnumTypeExtensionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

EnumTypeExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterEnumTypeExtension(this);
  }
};

EnumTypeExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitEnumTypeExtension(this);
  }
};

EnumTypeExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitEnumTypeExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.EnumTypeExtensionContext = EnumTypeExtensionContext;

GraphQLParser.prototype.enumTypeExtension = function() {
  var localctx = new EnumTypeExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 122, GraphQLParser.RULE_enumTypeExtension);
  var _la = 0; // Token type
  try {
    this.state = 612;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 77, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 599;
        this.match(GraphQLParser.T__21);
        this.state = 600;
        this.match(GraphQLParser.T__30);
        this.state = 601;
        this.name();
        this.state = 603;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__19) {
          this.state = 602;
          this.directives();
        }

        this.state = 605;
        this.enumValuesDefinition();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 607;
        this.match(GraphQLParser.T__21);
        this.state = 608;
        this.match(GraphQLParser.T__30);
        this.state = 609;
        this.name();
        this.state = 610;
        this.directives();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function InputObjectTypeDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_inputObjectTypeDefinition;
  return this;
}

InputObjectTypeDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InputObjectTypeDefinitionContext.prototype.constructor = InputObjectTypeDefinitionContext;

InputObjectTypeDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

InputObjectTypeDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

InputObjectTypeDefinitionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

InputObjectTypeDefinitionContext.prototype.inputFieldsDefinition = function() {
  return this.getTypedRuleContext(InputFieldsDefinitionContext, 0);
};

InputObjectTypeDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterInputObjectTypeDefinition(this);
  }
};

InputObjectTypeDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitInputObjectTypeDefinition(this);
  }
};

InputObjectTypeDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitInputObjectTypeDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.InputObjectTypeDefinitionContext = InputObjectTypeDefinitionContext;

GraphQLParser.prototype.inputObjectTypeDefinition = function() {
  var localctx = new InputObjectTypeDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 124, GraphQLParser.RULE_inputObjectTypeDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 615;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 614;
      this.description();
    }

    this.state = 617;
    this.match(GraphQLParser.T__31);
    this.state = 618;
    this.name();
    this.state = 620;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__19) {
      this.state = 619;
      this.directives();
    }

    this.state = 623;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 80, this._ctx);
    if(la_ === 1) {
      this.state = 622;
      this.inputFieldsDefinition();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function InputFieldsDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_inputFieldsDefinition;
  return this;
}

InputFieldsDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InputFieldsDefinitionContext.prototype.constructor = InputFieldsDefinitionContext;

InputFieldsDefinitionContext.prototype.inputValueDefinition = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(InputValueDefinitionContext);
  } else {
    return this.getTypedRuleContext(InputValueDefinitionContext, i);
  }
};

InputFieldsDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterInputFieldsDefinition(this);
  }
};

InputFieldsDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitInputFieldsDefinition(this);
  }
};

InputFieldsDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitInputFieldsDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.InputFieldsDefinitionContext = InputFieldsDefinitionContext;

GraphQLParser.prototype.inputFieldsDefinition = function() {
  var localctx = new InputFieldsDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 126, GraphQLParser.RULE_inputFieldsDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 625;
    this.match(GraphQLParser.T__3);
    this.state = 627;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    do {
      this.state = 626;
      this.inputValueDefinition();
      this.state = 629;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    } while(((_la - 52) & ~0x1f) == 0 && ((1 << (_la - 52)) & ((1 << (GraphQLParser.NAME - 52)) | (1 << (GraphQLParser.STRING - 52)) | (1 << (GraphQLParser.BLOCK_STRING - 52)))) !== 0);
    this.state = 631;
    this.match(GraphQLParser.T__4);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function InputObjectTypeExtensionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_inputObjectTypeExtension;
  return this;
}

InputObjectTypeExtensionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
InputObjectTypeExtensionContext.prototype.constructor = InputObjectTypeExtensionContext;

InputObjectTypeExtensionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

InputObjectTypeExtensionContext.prototype.inputFieldsDefinition = function() {
  return this.getTypedRuleContext(InputFieldsDefinitionContext, 0);
};

InputObjectTypeExtensionContext.prototype.directives = function() {
  return this.getTypedRuleContext(DirectivesContext, 0);
};

InputObjectTypeExtensionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterInputObjectTypeExtension(this);
  }
};

InputObjectTypeExtensionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitInputObjectTypeExtension(this);
  }
};

InputObjectTypeExtensionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitInputObjectTypeExtension(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.InputObjectTypeExtensionContext = InputObjectTypeExtensionContext;

GraphQLParser.prototype.inputObjectTypeExtension = function() {
  var localctx = new InputObjectTypeExtensionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 128, GraphQLParser.RULE_inputObjectTypeExtension);
  var _la = 0; // Token type
  try {
    this.state = 646;
    this._errHandler.sync(this);
    var la_ = this._interp.adaptivePredict(this._input, 83, this._ctx);
    switch (la_) {
      case 1:
        this.enterOuterAlt(localctx, 1);
        this.state = 633;
        this.match(GraphQLParser.T__21);
        this.state = 634;
        this.match(GraphQLParser.T__31);
        this.state = 635;
        this.name();
        this.state = 637;
        this._errHandler.sync(this);
        _la = this._input.LA(1);
        if(_la === GraphQLParser.T__19) {
          this.state = 636;
          this.directives();
        }

        this.state = 639;
        this.inputFieldsDefinition();
        break;

      case 2:
        this.enterOuterAlt(localctx, 2);
        this.state = 641;
        this.match(GraphQLParser.T__21);
        this.state = 642;
        this.match(GraphQLParser.T__31);
        this.state = 643;
        this.name();
        this.state = 644;
        this.directives();
        break;
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DirectiveDefinitionContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_directiveDefinition;
  return this;
}

DirectiveDefinitionContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DirectiveDefinitionContext.prototype.constructor = DirectiveDefinitionContext;

DirectiveDefinitionContext.prototype.name = function() {
  return this.getTypedRuleContext(NameContext, 0);
};

DirectiveDefinitionContext.prototype.directiveLocations = function() {
  return this.getTypedRuleContext(DirectiveLocationsContext, 0);
};

DirectiveDefinitionContext.prototype.description = function() {
  return this.getTypedRuleContext(DescriptionContext, 0);
};

DirectiveDefinitionContext.prototype.argumentsDefinition = function() {
  return this.getTypedRuleContext(ArgumentsDefinitionContext, 0);
};

DirectiveDefinitionContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDirectiveDefinition(this);
  }
};

DirectiveDefinitionContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDirectiveDefinition(this);
  }
};

DirectiveDefinitionContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDirectiveDefinition(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DirectiveDefinitionContext = DirectiveDefinitionContext;

GraphQLParser.prototype.directiveDefinition = function() {
  var localctx = new DirectiveDefinitionContext(this, this._ctx, this.state);
  this.enterRule(localctx, 130, GraphQLParser.RULE_directiveDefinition);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 649;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.STRING || _la === GraphQLParser.BLOCK_STRING) {
      this.state = 648;
      this.description();
    }

    this.state = 651;
    this.match(GraphQLParser.T__32);
    this.state = 652;
    this.match(GraphQLParser.T__19);
    this.state = 653;
    this.name();
    this.state = 655;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    if(_la === GraphQLParser.T__5) {
      this.state = 654;
      this.argumentsDefinition();
    }

    this.state = 657;
    this.match(GraphQLParser.T__10);
    this.state = 658;
    this.directiveLocations();
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DirectiveLocationsContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_directiveLocations;
  return this;
}

DirectiveLocationsContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DirectiveLocationsContext.prototype.constructor = DirectiveLocationsContext;

DirectiveLocationsContext.prototype.directiveLocation = function(i) {
  if(i === undefined) {
    i = null;
  }
  if(i === null) {
    return this.getTypedRuleContexts(DirectiveLocationContext);
  } else {
    return this.getTypedRuleContext(DirectiveLocationContext, i);
  }
};

DirectiveLocationsContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDirectiveLocations(this);
  }
};

DirectiveLocationsContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDirectiveLocations(this);
  }
};

DirectiveLocationsContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDirectiveLocations(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DirectiveLocationsContext = DirectiveLocationsContext;

GraphQLParser.prototype.directiveLocations = function() {
  var localctx = new DirectiveLocationsContext(this, this._ctx, this.state);
  this.enterRule(localctx, 132, GraphQLParser.RULE_directiveLocations);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 660;
    this.directiveLocation();
    this.state = 665;
    this._errHandler.sync(this);
    _la = this._input.LA(1);
    while(_la === GraphQLParser.T__29) {
      this.state = 661;
      this.match(GraphQLParser.T__29);
      this.state = 662;
      this.directiveLocation();
      this.state = 667;
      this._errHandler.sync(this);
      _la = this._input.LA(1);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function DirectiveLocationContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_directiveLocation;
  return this;
}

DirectiveLocationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
DirectiveLocationContext.prototype.constructor = DirectiveLocationContext;

DirectiveLocationContext.prototype.executableDirectiveLocation = function() {
  return this.getTypedRuleContext(ExecutableDirectiveLocationContext, 0);
};

DirectiveLocationContext.prototype.typeSystemDirectiveLocation = function() {
  return this.getTypedRuleContext(TypeSystemDirectiveLocationContext, 0);
};

DirectiveLocationContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterDirectiveLocation(this);
  }
};

DirectiveLocationContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitDirectiveLocation(this);
  }
};

DirectiveLocationContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitDirectiveLocation(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.DirectiveLocationContext = DirectiveLocationContext;

GraphQLParser.prototype.directiveLocation = function() {
  var localctx = new DirectiveLocationContext(this, this._ctx, this.state);
  this.enterRule(localctx, 134, GraphQLParser.RULE_directiveLocation);
  try {
    this.state = 670;
    this._errHandler.sync(this);
    switch (this._input.LA(1)) {
      case GraphQLParser.T__33:
      case GraphQLParser.T__34:
      case GraphQLParser.T__35:
      case GraphQLParser.T__36:
      case GraphQLParser.T__37:
      case GraphQLParser.T__38:
      case GraphQLParser.T__39:
        this.enterOuterAlt(localctx, 1);
        this.state = 668;
        this.executableDirectiveLocation();
        break;
      case GraphQLParser.T__40:
      case GraphQLParser.T__41:
      case GraphQLParser.T__42:
      case GraphQLParser.T__43:
      case GraphQLParser.T__44:
      case GraphQLParser.T__45:
      case GraphQLParser.T__46:
      case GraphQLParser.T__47:
      case GraphQLParser.T__48:
      case GraphQLParser.T__49:
      case GraphQLParser.T__50:
        this.enterOuterAlt(localctx, 2);
        this.state = 669;
        this.typeSystemDirectiveLocation();
        break;
      default:
        throw new antlr4.error.NoViableAltException(this);
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function ExecutableDirectiveLocationContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_executableDirectiveLocation;
  return this;
}

ExecutableDirectiveLocationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
ExecutableDirectiveLocationContext.prototype.constructor = ExecutableDirectiveLocationContext;

ExecutableDirectiveLocationContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterExecutableDirectiveLocation(this);
  }
};

ExecutableDirectiveLocationContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitExecutableDirectiveLocation(this);
  }
};

ExecutableDirectiveLocationContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitExecutableDirectiveLocation(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.ExecutableDirectiveLocationContext = ExecutableDirectiveLocationContext;

GraphQLParser.prototype.executableDirectiveLocation = function() {
  var localctx = new ExecutableDirectiveLocationContext(this, this._ctx, this.state);
  this.enterRule(localctx, 136, GraphQLParser.RULE_executableDirectiveLocation);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 672;
    _la = this._input.LA(1);
    if(!(((_la - 34) & ~0x1f) == 0 && ((1 << (_la - 34)) & ((1 << (GraphQLParser.T__33 - 34)) | (1 << (GraphQLParser.T__34 - 34)) | (1 << (GraphQLParser.T__35 - 34)) | (1 << (GraphQLParser.T__36 - 34)) | (1 << (GraphQLParser.T__37 - 34)) | (1 << (GraphQLParser.T__38 - 34)) | (1 << (GraphQLParser.T__39 - 34)))) !== 0)) {
      this._errHandler.recoverInline(this);
    } else {
      this._errHandler.reportMatch(this);
      this.consume();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function TypeSystemDirectiveLocationContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_typeSystemDirectiveLocation;
  return this;
}

TypeSystemDirectiveLocationContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
TypeSystemDirectiveLocationContext.prototype.constructor = TypeSystemDirectiveLocationContext;

TypeSystemDirectiveLocationContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterTypeSystemDirectiveLocation(this);
  }
};

TypeSystemDirectiveLocationContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitTypeSystemDirectiveLocation(this);
  }
};

TypeSystemDirectiveLocationContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitTypeSystemDirectiveLocation(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.TypeSystemDirectiveLocationContext = TypeSystemDirectiveLocationContext;

GraphQLParser.prototype.typeSystemDirectiveLocation = function() {
  var localctx = new TypeSystemDirectiveLocationContext(this, this._ctx, this.state);
  this.enterRule(localctx, 138, GraphQLParser.RULE_typeSystemDirectiveLocation);
  var _la = 0; // Token type
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 674;
    _la = this._input.LA(1);
    if(
      !(
        ((_la - 41) & ~0x1f) == 0 &&
        ((1 << (_la - 41)) &
          ((1 << (GraphQLParser.T__40 - 41)) |
            (1 << (GraphQLParser.T__41 - 41)) |
            (1 << (GraphQLParser.T__42 - 41)) |
            (1 << (GraphQLParser.T__43 - 41)) |
            (1 << (GraphQLParser.T__44 - 41)) |
            (1 << (GraphQLParser.T__45 - 41)) |
            (1 << (GraphQLParser.T__46 - 41)) |
            (1 << (GraphQLParser.T__47 - 41)) |
            (1 << (GraphQLParser.T__48 - 41)) |
            (1 << (GraphQLParser.T__49 - 41)) |
            (1 << (GraphQLParser.T__50 - 41)))) !==
          0
      )
    ) {
      this._errHandler.recoverInline(this);
    } else {
      this._errHandler.reportMatch(this);
      this.consume();
    }
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

function NameContext(parser, parent, invokingState) {
  if(parent === undefined) {
    parent = null;
  }
  if(invokingState === undefined || invokingState === null) {
    invokingState = -1;
  }
  antlr4.ParserRuleContext.call(this, parent, invokingState);
  this.parser = parser;
  this.ruleIndex = GraphQLParser.RULE_name;
  return this;
}

NameContext.prototype = Object.create(antlr4.ParserRuleContext.prototype);
NameContext.prototype.constructor = NameContext;

NameContext.prototype.NAME = function() {
  return this.getToken(GraphQLParser.NAME, 0);
};

NameContext.prototype.enterRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.enterName(this);
  }
};

NameContext.prototype.exitRule = function(listener) {
  if(listener instanceof GraphQLListener) {
    listener.exitName(this);
  }
};

NameContext.prototype.accept = function(visitor) {
  if(visitor instanceof GraphQLVisitor) {
    return visitor.visitName(this);
  } else {
    return visitor.visitChildren(this);
  }
};

GraphQLParser.NameContext = NameContext;

GraphQLParser.prototype.name = function() {
  var localctx = new NameContext(this, this._ctx, this.state);
  this.enterRule(localctx, 140, GraphQLParser.RULE_name);
  try {
    this.enterOuterAlt(localctx, 1);
    this.state = 676;
    this.match(GraphQLParser.NAME);
  } catch(re) {
    if(re instanceof antlr4.error.RecognitionException) {
      localctx.exception = re;
      this._errHandler.reportError(this, re);
      this._errHandler.recover(this, re);
    } else {
      throw re;
    }
  } finally {
    this.exitRule();
  }
  return localctx;
};

GraphQLParser.prototype.sempred = function(localctx, ruleIndex, predIndex) {
  switch (ruleIndex) {
    case 47:
      return this.implementsInterfaces_sempred(localctx, predIndex);
    default:
      throw 'No predicate with index:' + ruleIndex;
  }
};

GraphQLParser.prototype.implementsInterfaces_sempred = function(localctx, predIndex) {
  switch (predIndex) {
    case 0:
      return this.precpred(this._ctx, 1);
    default:
      throw 'No predicate with index:' + predIndex;
  }
};

exports.GraphQLParser = GraphQLParser;
